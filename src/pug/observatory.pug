html(lang="en")
    head
        title Page title
        meta(charset="utf-8")
        meta(name="viewport", content="width=device-width, initial-scale=1, shrink-to-fit=no")
        link(rel="preconnect", href="https://fonts.gstatic.com")
        link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Public+Sans:100,100i,200,200i,300,300i,400i,400,500,500i,600,600i,700,700i,800,800i,900,900i|Manrope:200,300,400,500,600,700,800&subset=latin,latin-ext,cyrillic,greek")
        link(href="https://fonts.cdnfonts.com/css/general-sans?styles=135312,135310,135313,135303", rel="stylesheet")
        link(href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap", rel="stylesheet")
        link(rel="stylesheet", href="css/tailwind/tailwind.min.css")
        link(rel="stylesheet", href="css/main.css")
        link(rel="icon", type="image/png", sizes="32x32", href="shuffle-for-tailwind.png")
        script(src="js/main.js")
        style.
                    html,
            body {
              height: 100%;
              margin: 0px;
            }
            .slider-container {
                display: flex;
                align-items: center;
                justify-content: center;
                height: 100%;
            }
            .slider {
                width: 100%;
                max-width: 600px;
                height: 400px;
                margin: 20px;
                text-align: center;
                border-radius: 20px;
                overflow: hidden;
                position: relative;
            }
            .slides {
                display: flex;
                overflow-x: scroll;
                position: relative;
                scroll-behavior: smooth;
                scroll-snap-type: x mandatory;
            }
            .slide:nth-of-type(even) {
            }
            .slide {
                display: flex;
                justify-content: center;
                align-items: center;
                flex-shrink: 0;
                width: 100%;
                height: 400px;
                margin-right: 0px;
                box-sizing: border-box;
                transform-origin: center center;
                transform: scale(1);
                scroll-snap-align: center;
            }
            .slide__text {
                font-size: 40px;
                font-weight: bold;
                font-family: sans-serif;
            }
            .slide a {
                background: none;
                border: none;
            }
            a.slide__prev,
            .slider::before {
                transform: rotate(135deg);
                -webkit-transform: rotate(135deg);
                left: 5%;
            }
            a.slide__next,
            .slider::after {
                transform: rotate(-45deg);
                -webkit-transform: rotate(-45deg);
                right: 5%;
            }
            .slider::before,
            .slider::after,
            .slide__prev,
            .slide__next {
                position: absolute;
                top: 48%;
                width: 35px;
                height: 35px;
                border: solid black;
                border-width: 0 4px 4px 0;
                padding: 3px;
                box-sizing: border-box;
            }
            .slider::before,
            .slider::after {
              content: '';
              z-index: 1;
              background: none;
              pointer-events: none;
            }
            .slider__nav {
                box-sizing: border-box;
                position: absolute;
                bottom: 5%;
                left: 50%;
                width: 200px;
                margin-left: -100px;
                text-align: center;
            }
            .slider__navlink {
                display: inline-block;
                height: 15px;
                width: 15px;
                border-radius: 50%;
                background-color: black;
                margin: 0 10px 0 10px;
            }
                
        style.
                    .dropdown:hover .dropdown-menu {  display: block;}.dropdown-container {  display: none;  background-color: #262626;  padding-left: 8px;}.navbar ul ul li a:hover {background-color: #2D2E5F;}.navbar ul ul li {display: block;}.navbar li:hover ul {display: block;}.navbar ul ul {position: absolute;top: 100%;display: none;}.navbar li a {display: block;padding: 10px 20px;text-decoration: none;}.navbar li {display: inline-block;}.navbar ul {list-style-type: none;margin: 0;padding: 0;}.navbar {position: relative;z-index: 999;}.dropdown-content a:hover {background-color: #2D2E5F;  }.dropdown-content a {      display: block;      color: #2D2E5F;      padding: 5px;      text-decoration: none;  }.dropdown:hover .dropdown-content {      display: block;  }.dropdown-content {      display: none;      position: absolute;      width: 100%;      overflow: auto;      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);  }
                
        script(src="flickity.pkgd.js")
        script(type="text/javascript").
                    /*!  * Bootstrap v4.3.1 (https://getbootstrap.com/)  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)  */(function (global, factory) {  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :  typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :  (global = global || self, factory(global.bootstrap = {}, global.jQuery, global.Popper));}(this, function (exports, $, Popper) { 'use strict';  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;  Popper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;  function _defineProperties(target, props) {    for (var i = 0; i < props.length; i++) {      var descriptor = props[i];      descriptor.enumerable = descriptor.enumerable || false;      descriptor.configurable = true;      if ("value" in descriptor) descriptor.writable = true;      Object.defineProperty(target, descriptor.key, descriptor);    }  }  function _createClass(Constructor, protoProps, staticProps) {    if (protoProps) _defineProperties(Constructor.prototype, protoProps);    if (staticProps) _defineProperties(Constructor, staticProps);    return Constructor;  }  function _defineProperty(obj, key, value) {    if (key in obj) {      Object.defineProperty(obj, key, {        value: value,        enumerable: true,        configurable: true,        writable: true      });    } else {      obj[key] = value;    }    return obj;  }  function _objectSpread(target) {    for (var i = 1; i < arguments.length; i++) {      var source = arguments[i] != null ? arguments[i] : {};      var ownKeys = Object.keys(source);      if (typeof Object.getOwnPropertySymbols === 'function') {        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {          return Object.getOwnPropertyDescriptor(source, sym).enumerable;        }));      }      ownKeys.forEach(function (key) {        _defineProperty(target, key, source[key]);      });    }    return target;  }  function _inheritsLoose(subClass, superClass) {    subClass.prototype = Object.create(superClass.prototype);    subClass.prototype.constructor = subClass;    subClass.__proto__ = superClass;  }  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): util.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  /**   * ------------------------------------------------------------------------   * Private TransitionEnd Helpers   * ------------------------------------------------------------------------   */  var TRANSITION_END = 'transitionend';  var MAX_UID = 1000000;  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)  function toType(obj) {    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();  }  function getSpecialTransitionEndEvent() {    return {      bindType: TRANSITION_END,      delegateType: TRANSITION_END,      handle: function handle(event) {        if ($(event.target).is(this)) {          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params        }        return undefined; // eslint-disable-line no-undefined      }    };  }  function transitionEndEmulator(duration) {    var _this = this;    var called = false;    $(this).one(Util.TRANSITION_END, function () {      called = true;    });    setTimeout(function () {      if (!called) {        Util.triggerTransitionEnd(_this);      }    }, duration);    return this;  }  function setTransitionEndSupport() {    $.fn.emulateTransitionEnd = transitionEndEmulator;    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();  }  /**   * --------------------------------------------------------------------------   * Public Util Api   * --------------------------------------------------------------------------   */  var Util = {    TRANSITION_END: 'bsTransitionEnd',    getUID: function getUID(prefix) {      do {        // eslint-disable-next-line no-bitwise        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here      } while (document.getElementById(prefix));      return prefix;    },    getSelectorFromElement: function getSelectorFromElement(element) {      var selector = element.getAttribute('data-target');      if (!selector || selector === '#') {        var hrefAttr = element.getAttribute('href');        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';      }      try {        return document.querySelector(selector) ? selector : null;      } catch (err) {        return null;      }    },    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {      if (!element) {        return 0;      } // Get transition-duration of the element      var transitionDuration = $(element).css('transition-duration');      var transitionDelay = $(element).css('transition-delay');      var floatTransitionDuration = parseFloat(transitionDuration);      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found      if (!floatTransitionDuration && !floatTransitionDelay) {        return 0;      } // If multiple durations are defined, take the first      transitionDuration = transitionDuration.split(',')[0];      transitionDelay = transitionDelay.split(',')[0];      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;    },    reflow: function reflow(element) {      return element.offsetHeight;    },    triggerTransitionEnd: function triggerTransitionEnd(element) {      $(element).trigger(TRANSITION_END);    },    // TODO: Remove in v5    supportsTransitionEnd: function supportsTransitionEnd() {      return Boolean(TRANSITION_END);    },    isElement: function isElement(obj) {      return (obj[0] || obj).nodeType;    },    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {      for (var property in configTypes) {        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {          var expectedTypes = configTypes[property];          var value = config[property];          var valueType = value && Util.isElement(value) ? 'element' : toType(value);          if (!new RegExp(expectedTypes).test(valueType)) {            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));          }        }      }    },    findShadowRoot: function findShadowRoot(element) {      if (!document.documentElement.attachShadow) {        return null;      } // Can find the shadow root otherwise it'll return the document      if (typeof element.getRootNode === 'function') {        var root = element.getRootNode();        return root instanceof ShadowRoot ? root : null;      }      if (element instanceof ShadowRoot) {        return element;      } // when we don't find a shadow root      if (!element.parentNode) {        return null;      }      return Util.findShadowRoot(element.parentNode);    }  };  setTransitionEndSupport();  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME = 'alert';  var VERSION = '4.3.1';  var DATA_KEY = 'bs.alert';  var EVENT_KEY = "." + DATA_KEY;  var DATA_API_KEY = '.data-api';  var JQUERY_NO_CONFLICT = $.fn[NAME];  var Selector = {    DISMISS: '[data-dismiss="alert"]'  };  var Event = {    CLOSE: "close" + EVENT_KEY,    CLOSED: "closed" + EVENT_KEY,    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY  };  var ClassName = {    ALERT: 'alert',    FADE: 'fade',    SHOW: 'show'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Alert =  /*#__PURE__*/  function () {    function Alert(element) {      this._element = element;    } // Getters    var _proto = Alert.prototype;    // Public    _proto.close = function close(element) {      var rootElement = this._element;      if (element) {        rootElement = this._getRootElement(element);      }      var customEvent = this._triggerCloseEvent(rootElement);      if (customEvent.isDefaultPrevented()) {        return;      }      this._removeElement(rootElement);    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY);      this._element = null;    } // Private    ;    _proto._getRootElement = function _getRootElement(element) {      var selector = Util.getSelectorFromElement(element);      var parent = false;      if (selector) {        parent = document.querySelector(selector);      }      if (!parent) {        parent = $(element).closest("." + ClassName.ALERT)[0];      }      return parent;    };    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {      var closeEvent = $.Event(Event.CLOSE);      $(element).trigger(closeEvent);      return closeEvent;    };    _proto._removeElement = function _removeElement(element) {      var _this = this;      $(element).removeClass(ClassName.SHOW);      if (!$(element).hasClass(ClassName.FADE)) {        this._destroyElement(element);        return;      }      var transitionDuration = Util.getTransitionDurationFromElement(element);      $(element).one(Util.TRANSITION_END, function (event) {        return _this._destroyElement(element, event);      }).emulateTransitionEnd(transitionDuration);    };    _proto._destroyElement = function _destroyElement(element) {      $(element).detach().trigger(Event.CLOSED).remove();    } // Static    ;    Alert._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var $element = $(this);        var data = $element.data(DATA_KEY);        if (!data) {          data = new Alert(this);          $element.data(DATA_KEY, data);        }        if (config === 'close') {          data[config](this);        }      });    };    Alert._handleDismiss = function _handleDismiss(alertInstance) {      return function (event) {        if (event) {          event.preventDefault();        }        alertInstance.close(this);      };    };    _createClass(Alert, null, [{      key: "VERSION",      get: function get() {        return VERSION;      }    }]);    return Alert;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME] = Alert._jQueryInterface;  $.fn[NAME].Constructor = Alert;  $.fn[NAME].noConflict = function () {    $.fn[NAME] = JQUERY_NO_CONFLICT;    return Alert._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$1 = 'button';  var VERSION$1 = '4.3.1';  var DATA_KEY$1 = 'bs.button';  var EVENT_KEY$1 = "." + DATA_KEY$1;  var DATA_API_KEY$1 = '.data-api';  var JQUERY_NO_CONFLICT$1 = $.fn[NAME$1];  var ClassName$1 = {    ACTIVE: 'active',    BUTTON: 'btn',    FOCUS: 'focus'  };  var Selector$1 = {    DATA_TOGGLE_CARROT: '[data-toggle^="button"]',    DATA_TOGGLE: '[data-toggle="buttons"]',    INPUT: 'input:not([type="hidden"])',    ACTIVE: '.active',    BUTTON: '.btn'  };  var Event$1 = {    CLICK_DATA_API: "click" + EVENT_KEY$1 + DATA_API_KEY$1,    FOCUS_BLUR_DATA_API: "focus" + EVENT_KEY$1 + DATA_API_KEY$1 + " " + ("blur" + EVENT_KEY$1 + DATA_API_KEY$1)    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Button =  /*#__PURE__*/  function () {    function Button(element) {      this._element = element;    } // Getters    var _proto = Button.prototype;    // Public    _proto.toggle = function toggle() {      var triggerChangeEvent = true;      var addAriaPressed = true;      var rootElement = $(this._element).closest(Selector$1.DATA_TOGGLE)[0];      if (rootElement) {        var input = this._element.querySelector(Selector$1.INPUT);        if (input) {          if (input.type === 'radio') {            if (input.checked && this._element.classList.contains(ClassName$1.ACTIVE)) {              triggerChangeEvent = false;            } else {              var activeElement = rootElement.querySelector(Selector$1.ACTIVE);              if (activeElement) {                $(activeElement).removeClass(ClassName$1.ACTIVE);              }            }          }          if (triggerChangeEvent) {            if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {              return;            }            input.checked = !this._element.classList.contains(ClassName$1.ACTIVE);            $(input).trigger('change');          }          input.focus();          addAriaPressed = false;        }      }      if (addAriaPressed) {        this._element.setAttribute('aria-pressed', !this._element.classList.contains(ClassName$1.ACTIVE));      }      if (triggerChangeEvent) {        $(this._element).toggleClass(ClassName$1.ACTIVE);      }    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY$1);      this._element = null;    } // Static    ;    Button._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$1);        if (!data) {          data = new Button(this);          $(this).data(DATA_KEY$1, data);        }        if (config === 'toggle') {          data[config]();        }      });    };    _createClass(Button, null, [{      key: "VERSION",      get: function get() {        return VERSION$1;      }    }]);    return Button;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$1.CLICK_DATA_API, Selector$1.DATA_TOGGLE_CARROT, function (event) {    event.preventDefault();    var button = event.target;    if (!$(button).hasClass(ClassName$1.BUTTON)) {      button = $(button).closest(Selector$1.BUTTON);    }    Button._jQueryInterface.call($(button), 'toggle');  }).on(Event$1.FOCUS_BLUR_DATA_API, Selector$1.DATA_TOGGLE_CARROT, function (event) {    var button = $(event.target).closest(Selector$1.BUTTON)[0];    $(button).toggleClass(ClassName$1.FOCUS, /^focus(in)?$/.test(event.type));  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$1] = Button._jQueryInterface;  $.fn[NAME$1].Constructor = Button;  $.fn[NAME$1].noConflict = function () {    $.fn[NAME$1] = JQUERY_NO_CONFLICT$1;    return Button._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$2 = 'carousel';  var VERSION$2 = '4.3.1';  var DATA_KEY$2 = 'bs.carousel';  var EVENT_KEY$2 = "." + DATA_KEY$2;  var DATA_API_KEY$2 = '.data-api';  var JQUERY_NO_CONFLICT$2 = $.fn[NAME$2];  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch  var SWIPE_THRESHOLD = 40;  var Default = {    interval: 5000,    keyboard: true,    slide: false,    pause: 'hover',    wrap: true,    touch: true  };  var DefaultType = {    interval: '(number|boolean)',    keyboard: 'boolean',    slide: '(boolean|string)',    pause: '(string|boolean)',    wrap: 'boolean',    touch: 'boolean'  };  var Direction = {    NEXT: 'next',    PREV: 'prev',    LEFT: 'left',    RIGHT: 'right'  };  var Event$2 = {    SLIDE: "slide" + EVENT_KEY$2,    SLID: "slid" + EVENT_KEY$2,    KEYDOWN: "keydown" + EVENT_KEY$2,    MOUSEENTER: "mouseenter" + EVENT_KEY$2,    MOUSELEAVE: "mouseleave" + EVENT_KEY$2,    TOUCHSTART: "touchstart" + EVENT_KEY$2,    TOUCHMOVE: "touchmove" + EVENT_KEY$2,    TOUCHEND: "touchend" + EVENT_KEY$2,    POINTERDOWN: "pointerdown" + EVENT_KEY$2,    POINTERUP: "pointerup" + EVENT_KEY$2,    DRAG_START: "dragstart" + EVENT_KEY$2,    LOAD_DATA_API: "load" + EVENT_KEY$2 + DATA_API_KEY$2,    CLICK_DATA_API: "click" + EVENT_KEY$2 + DATA_API_KEY$2  };  var ClassName$2 = {    CAROUSEL: 'carousel',    ACTIVE: 'active',    SLIDE: 'slide',    RIGHT: 'carousel-item-right',    LEFT: 'carousel-item-left',    NEXT: 'carousel-item-next',    PREV: 'carousel-item-prev',    ITEM: 'carousel-item',    POINTER_EVENT: 'pointer-event'  };  var Selector$2 = {    ACTIVE: '.active',    ACTIVE_ITEM: '.active.carousel-item',    ITEM: '.carousel-item',    ITEM_IMG: '.carousel-item img',    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',    INDICATORS: '.carousel-indicators',    DATA_SLIDE: '[data-slide], [data-slide-to]',    DATA_RIDE: '[data-ride="carousel"]'  };  var PointerType = {    TOUCH: 'touch',    PEN: 'pen'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Carousel =  /*#__PURE__*/  function () {    function Carousel(element, config) {      this._items = null;      this._interval = null;      this._activeElement = null;      this._isPaused = false;      this._isSliding = false;      this.touchTimeout = null;      this.touchStartX = 0;      this.touchDeltaX = 0;      this._config = this._getConfig(config);      this._element = element;      this._indicatorsElement = this._element.querySelector(Selector$2.INDICATORS);      this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;      this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);      this._addEventListeners();    } // Getters    var _proto = Carousel.prototype;    // Public    _proto.next = function next() {      if (!this._isSliding) {        this._slide(Direction.NEXT);      }    };    _proto.nextWhenVisible = function nextWhenVisible() {      // Don't call next when the page isn't visible      // or the carousel or its parent isn't visible      if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {        this.next();      }    };    _proto.prev = function prev() {      if (!this._isSliding) {        this._slide(Direction.PREV);      }    };    _proto.pause = function pause(event) {      if (!event) {        this._isPaused = true;      }      if (this._element.querySelector(Selector$2.NEXT_PREV)) {        Util.triggerTransitionEnd(this._element);        this.cycle(true);      }      clearInterval(this._interval);      this._interval = null;    };    _proto.cycle = function cycle(event) {      if (!event) {        this._isPaused = false;      }      if (this._interval) {        clearInterval(this._interval);        this._interval = null;      }      if (this._config.interval && !this._isPaused) {        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);      }    };    _proto.to = function to(index) {      var _this = this;      this._activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM);      var activeIndex = this._getItemIndex(this._activeElement);      if (index > this._items.length - 1 || index < 0) {        return;      }      if (this._isSliding) {        $(this._element).one(Event$2.SLID, function () {          return _this.to(index);        });        return;      }      if (activeIndex === index) {        this.pause();        this.cycle();        return;      }      var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;      this._slide(direction, this._items[index]);    };    _proto.dispose = function dispose() {      $(this._element).off(EVENT_KEY$2);      $.removeData(this._element, DATA_KEY$2);      this._items = null;      this._config = null;      this._element = null;      this._interval = null;      this._isPaused = null;      this._isSliding = null;      this._activeElement = null;      this._indicatorsElement = null;    } // Private    ;    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, Default, config);      Util.typeCheckConfig(NAME$2, config, DefaultType);      return config;    };    _proto._handleSwipe = function _handleSwipe() {      var absDeltax = Math.abs(this.touchDeltaX);      if (absDeltax <= SWIPE_THRESHOLD) {        return;      }      var direction = absDeltax / this.touchDeltaX; // swipe left      if (direction > 0) {        this.prev();      } // swipe right      if (direction < 0) {        this.next();      }    };    _proto._addEventListeners = function _addEventListeners() {      var _this2 = this;      if (this._config.keyboard) {        $(this._element).on(Event$2.KEYDOWN, function (event) {          return _this2._keydown(event);        });      }      if (this._config.pause === 'hover') {        $(this._element).on(Event$2.MOUSEENTER, function (event) {          return _this2.pause(event);        }).on(Event$2.MOUSELEAVE, function (event) {          return _this2.cycle(event);        });      }      if (this._config.touch) {        this._addTouchEventListeners();      }    };    _proto._addTouchEventListeners = function _addTouchEventListeners() {      var _this3 = this;      if (!this._touchSupported) {        return;      }      var start = function start(event) {        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {          _this3.touchStartX = event.originalEvent.clientX;        } else if (!_this3._pointerEvent) {          _this3.touchStartX = event.originalEvent.touches[0].clientX;        }      };      var move = function move(event) {        // ensure swiping with one touch and not pinching        if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {          _this3.touchDeltaX = 0;        } else {          _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;        }      };      var end = function end(event) {        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {          _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;        }        _this3._handleSwipe();        if (_this3._config.pause === 'hover') {          // If it's a touch-enabled device, mouseenter/leave are fired as          // part of the mouse compatibility events on first tap - the carousel          // would stop cycling until user tapped out of it;          // here, we listen for touchend, explicitly pause the carousel          // (as if it's the second time we tap on it, mouseenter compat event          // is NOT fired) and after a timeout (to allow for mouse compatibility          // events to fire) we explicitly restart cycling          _this3.pause();          if (_this3.touchTimeout) {            clearTimeout(_this3.touchTimeout);          }          _this3.touchTimeout = setTimeout(function (event) {            return _this3.cycle(event);          }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);        }      };      $(this._element.querySelectorAll(Selector$2.ITEM_IMG)).on(Event$2.DRAG_START, function (e) {        return e.preventDefault();      });      if (this._pointerEvent) {        $(this._element).on(Event$2.POINTERDOWN, function (event) {          return start(event);        });        $(this._element).on(Event$2.POINTERUP, function (event) {          return end(event);        });        this._element.classList.add(ClassName$2.POINTER_EVENT);      } else {        $(this._element).on(Event$2.TOUCHSTART, function (event) {          return start(event);        });        $(this._element).on(Event$2.TOUCHMOVE, function (event) {          return move(event);        });        $(this._element).on(Event$2.TOUCHEND, function (event) {          return end(event);        });      }    };    _proto._keydown = function _keydown(event) {      if (/input|textarea/i.test(event.target.tagName)) {        return;      }      switch (event.which) {        case ARROW_LEFT_KEYCODE:          event.preventDefault();          this.prev();          break;        case ARROW_RIGHT_KEYCODE:          event.preventDefault();          this.next();          break;        default:      }    };    _proto._getItemIndex = function _getItemIndex(element) {      this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector$2.ITEM)) : [];      return this._items.indexOf(element);    };    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {      var isNextDirection = direction === Direction.NEXT;      var isPrevDirection = direction === Direction.PREV;      var activeIndex = this._getItemIndex(activeElement);      var lastItemIndex = this._items.length - 1;      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;      if (isGoingToWrap && !this._config.wrap) {        return activeElement;      }      var delta = direction === Direction.PREV ? -1 : 1;      var itemIndex = (activeIndex + delta) % this._items.length;      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];    };    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {      var targetIndex = this._getItemIndex(relatedTarget);      var fromIndex = this._getItemIndex(this._element.querySelector(Selector$2.ACTIVE_ITEM));      var slideEvent = $.Event(Event$2.SLIDE, {        relatedTarget: relatedTarget,        direction: eventDirectionName,        from: fromIndex,        to: targetIndex      });      $(this._element).trigger(slideEvent);      return slideEvent;    };    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {      if (this._indicatorsElement) {        var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector$2.ACTIVE));        $(indicators).removeClass(ClassName$2.ACTIVE);        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];        if (nextIndicator) {          $(nextIndicator).addClass(ClassName$2.ACTIVE);        }      }    };    _proto._slide = function _slide(direction, element) {      var _this4 = this;      var activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM);      var activeElementIndex = this._getItemIndex(activeElement);      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);      var nextElementIndex = this._getItemIndex(nextElement);      var isCycling = Boolean(this._interval);      var directionalClassName;      var orderClassName;      var eventDirectionName;      if (direction === Direction.NEXT) {        directionalClassName = ClassName$2.LEFT;        orderClassName = ClassName$2.NEXT;        eventDirectionName = Direction.LEFT;      } else {        directionalClassName = ClassName$2.RIGHT;        orderClassName = ClassName$2.PREV;        eventDirectionName = Direction.RIGHT;      }      if (nextElement && $(nextElement).hasClass(ClassName$2.ACTIVE)) {        this._isSliding = false;        return;      }      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);      if (slideEvent.isDefaultPrevented()) {        return;      }      if (!activeElement || !nextElement) {        // Some weirdness is happening, so we bail        return;      }      this._isSliding = true;      if (isCycling) {        this.pause();      }      this._setActiveIndicatorElement(nextElement);      var slidEvent = $.Event(Event$2.SLID, {        relatedTarget: nextElement,        direction: eventDirectionName,        from: activeElementIndex,        to: nextElementIndex      });      if ($(this._element).hasClass(ClassName$2.SLIDE)) {        $(nextElement).addClass(orderClassName);        Util.reflow(nextElement);        $(activeElement).addClass(directionalClassName);        $(nextElement).addClass(directionalClassName);        var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);        if (nextElementInterval) {          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;          this._config.interval = nextElementInterval;        } else {          this._config.interval = this._config.defaultInterval || this._config.interval;        }        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);        $(activeElement).one(Util.TRANSITION_END, function () {          $(nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(ClassName$2.ACTIVE);          $(activeElement).removeClass(ClassName$2.ACTIVE + " " + orderClassName + " " + directionalClassName);          _this4._isSliding = false;          setTimeout(function () {            return $(_this4._element).trigger(slidEvent);          }, 0);        }).emulateTransitionEnd(transitionDuration);      } else {        $(activeElement).removeClass(ClassName$2.ACTIVE);        $(nextElement).addClass(ClassName$2.ACTIVE);        this._isSliding = false;        $(this._element).trigger(slidEvent);      }      if (isCycling) {        this.cycle();      }    } // Static    ;    Carousel._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$2);        var _config = _objectSpread({}, Default, $(this).data());        if (typeof config === 'object') {          _config = _objectSpread({}, _config, config);        }        var action = typeof config === 'string' ? config : _config.slide;        if (!data) {          data = new Carousel(this, _config);          $(this).data(DATA_KEY$2, data);        }        if (typeof config === 'number') {          data.to(config);        } else if (typeof action === 'string') {          if (typeof data[action] === 'undefined') {            throw new TypeError("No method named \"" + action + "\"");          }          data[action]();        } else if (_config.interval && _config.ride) {          data.pause();          data.cycle();        }      });    };    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {      var selector = Util.getSelectorFromElement(this);      if (!selector) {        return;      }      var target = $(selector)[0];      if (!target || !$(target).hasClass(ClassName$2.CAROUSEL)) {        return;      }      var config = _objectSpread({}, $(target).data(), $(this).data());      var slideIndex = this.getAttribute('data-slide-to');      if (slideIndex) {        config.interval = false;      }      Carousel._jQueryInterface.call($(target), config);      if (slideIndex) {        $(target).data(DATA_KEY$2).to(slideIndex);      }      event.preventDefault();    };    _createClass(Carousel, null, [{      key: "VERSION",      get: function get() {        return VERSION$2;      }    }, {      key: "Default",      get: function get() {        return Default;      }    }]);    return Carousel;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$2.CLICK_DATA_API, Selector$2.DATA_SLIDE, Carousel._dataApiClickHandler);  $(window).on(Event$2.LOAD_DATA_API, function () {    var carousels = [].slice.call(document.querySelectorAll(Selector$2.DATA_RIDE));    for (var i = 0, len = carousels.length; i < len; i++) {      var $carousel = $(carousels[i]);      Carousel._jQueryInterface.call($carousel, $carousel.data());    }  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$2] = Carousel._jQueryInterface;  $.fn[NAME$2].Constructor = Carousel;  $.fn[NAME$2].noConflict = function () {    $.fn[NAME$2] = JQUERY_NO_CONFLICT$2;    return Carousel._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$3 = 'collapse';  var VERSION$3 = '4.3.1';  var DATA_KEY$3 = 'bs.collapse';  var EVENT_KEY$3 = "." + DATA_KEY$3;  var DATA_API_KEY$3 = '.data-api';  var JQUERY_NO_CONFLICT$3 = $.fn[NAME$3];  var Default$1 = {    toggle: true,    parent: ''  };  var DefaultType$1 = {    toggle: 'boolean',    parent: '(string|element)'  };  var Event$3 = {    SHOW: "show" + EVENT_KEY$3,    SHOWN: "shown" + EVENT_KEY$3,    HIDE: "hide" + EVENT_KEY$3,    HIDDEN: "hidden" + EVENT_KEY$3,    CLICK_DATA_API: "click" + EVENT_KEY$3 + DATA_API_KEY$3  };  var ClassName$3 = {    SHOW: 'show',    COLLAPSE: 'collapse',    COLLAPSING: 'collapsing',    COLLAPSED: 'collapsed'  };  var Dimension = {    WIDTH: 'width',    HEIGHT: 'height'  };  var Selector$3 = {    ACTIVES: '.show, .collapsing',    DATA_TOGGLE: '[data-toggle="collapse"]'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Collapse =  /*#__PURE__*/  function () {    function Collapse(element, config) {      this._isTransitioning = false;      this._element = element;      this._config = this._getConfig(config);      this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));      var toggleList = [].slice.call(document.querySelectorAll(Selector$3.DATA_TOGGLE));      for (var i = 0, len = toggleList.length; i < len; i++) {        var elem = toggleList[i];        var selector = Util.getSelectorFromElement(elem);        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {          return foundElem === element;        });        if (selector !== null && filterElement.length > 0) {          this._selector = selector;          this._triggerArray.push(elem);        }      }      this._parent = this._config.parent ? this._getParent() : null;      if (!this._config.parent) {        this._addAriaAndCollapsedClass(this._element, this._triggerArray);      }      if (this._config.toggle) {        this.toggle();      }    } // Getters    var _proto = Collapse.prototype;    // Public    _proto.toggle = function toggle() {      if ($(this._element).hasClass(ClassName$3.SHOW)) {        this.hide();      } else {        this.show();      }    };    _proto.show = function show() {      var _this = this;      if (this._isTransitioning || $(this._element).hasClass(ClassName$3.SHOW)) {        return;      }      var actives;      var activesData;      if (this._parent) {        actives = [].slice.call(this._parent.querySelectorAll(Selector$3.ACTIVES)).filter(function (elem) {          if (typeof _this._config.parent === 'string') {            return elem.getAttribute('data-parent') === _this._config.parent;          }          return elem.classList.contains(ClassName$3.COLLAPSE);        });        if (actives.length === 0) {          actives = null;        }      }      if (actives) {        activesData = $(actives).not(this._selector).data(DATA_KEY$3);        if (activesData && activesData._isTransitioning) {          return;        }      }      var startEvent = $.Event(Event$3.SHOW);      $(this._element).trigger(startEvent);      if (startEvent.isDefaultPrevented()) {        return;      }      if (actives) {        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');        if (!activesData) {          $(actives).data(DATA_KEY$3, null);        }      }      var dimension = this._getDimension();      $(this._element).removeClass(ClassName$3.COLLAPSE).addClass(ClassName$3.COLLAPSING);      this._element.style[dimension] = 0;      if (this._triggerArray.length) {        $(this._triggerArray).removeClass(ClassName$3.COLLAPSED).attr('aria-expanded', true);      }      this.setTransitioning(true);      var complete = function complete() {        $(_this._element).removeClass(ClassName$3.COLLAPSING).addClass(ClassName$3.COLLAPSE).addClass(ClassName$3.SHOW);        _this._element.style[dimension] = '';        _this.setTransitioning(false);        $(_this._element).trigger(Event$3.SHOWN);      };      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);      var scrollSize = "scroll" + capitalizedDimension;      var transitionDuration = Util.getTransitionDurationFromElement(this._element);      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      this._element.style[dimension] = this._element[scrollSize] + "px";    };    _proto.hide = function hide() {      var _this2 = this;      if (this._isTransitioning || !$(this._element).hasClass(ClassName$3.SHOW)) {        return;      }      var startEvent = $.Event(Event$3.HIDE);      $(this._element).trigger(startEvent);      if (startEvent.isDefaultPrevented()) {        return;      }      var dimension = this._getDimension();      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";      Util.reflow(this._element);      $(this._element).addClass(ClassName$3.COLLAPSING).removeClass(ClassName$3.COLLAPSE).removeClass(ClassName$3.SHOW);      var triggerArrayLength = this._triggerArray.length;      if (triggerArrayLength > 0) {        for (var i = 0; i < triggerArrayLength; i++) {          var trigger = this._triggerArray[i];          var selector = Util.getSelectorFromElement(trigger);          if (selector !== null) {            var $elem = $([].slice.call(document.querySelectorAll(selector)));            if (!$elem.hasClass(ClassName$3.SHOW)) {              $(trigger).addClass(ClassName$3.COLLAPSED).attr('aria-expanded', false);            }          }        }      }      this.setTransitioning(true);      var complete = function complete() {        _this2.setTransitioning(false);        $(_this2._element).removeClass(ClassName$3.COLLAPSING).addClass(ClassName$3.COLLAPSE).trigger(Event$3.HIDDEN);      };      this._element.style[dimension] = '';      var transitionDuration = Util.getTransitionDurationFromElement(this._element);      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);    };    _proto.setTransitioning = function setTransitioning(isTransitioning) {      this._isTransitioning = isTransitioning;    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY$3);      this._config = null;      this._parent = null;      this._element = null;      this._triggerArray = null;      this._isTransitioning = null;    } // Private    ;    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, Default$1, config);      config.toggle = Boolean(config.toggle); // Coerce string values      Util.typeCheckConfig(NAME$3, config, DefaultType$1);      return config;    };    _proto._getDimension = function _getDimension() {      var hasWidth = $(this._element).hasClass(Dimension.WIDTH);      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;    };    _proto._getParent = function _getParent() {      var _this3 = this;      var parent;      if (Util.isElement(this._config.parent)) {        parent = this._config.parent; // It's a jQuery object        if (typeof this._config.parent.jquery !== 'undefined') {          parent = this._config.parent[0];        }      } else {        parent = document.querySelector(this._config.parent);      }      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";      var children = [].slice.call(parent.querySelectorAll(selector));      $(children).each(function (i, element) {        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);      });      return parent;    };    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {      var isOpen = $(element).hasClass(ClassName$3.SHOW);      if (triggerArray.length) {        $(triggerArray).toggleClass(ClassName$3.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);      }    } // Static    ;    Collapse._getTargetFromElement = function _getTargetFromElement(element) {      var selector = Util.getSelectorFromElement(element);      return selector ? document.querySelector(selector) : null;    };    Collapse._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var $this = $(this);        var data = $this.data(DATA_KEY$3);        var _config = _objectSpread({}, Default$1, $this.data(), typeof config === 'object' && config ? config : {});        if (!data && _config.toggle && /show|hide/.test(config)) {          _config.toggle = false;        }        if (!data) {          data = new Collapse(this, _config);          $this.data(DATA_KEY$3, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    _createClass(Collapse, null, [{      key: "VERSION",      get: function get() {        return VERSION$3;      }    }, {      key: "Default",      get: function get() {        return Default$1;      }    }]);    return Collapse;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$3.CLICK_DATA_API, Selector$3.DATA_TOGGLE, function (event) {    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element    if (event.currentTarget.tagName === 'A') {      event.preventDefault();    }    var $trigger = $(this);    var selector = Util.getSelectorFromElement(this);    var selectors = [].slice.call(document.querySelectorAll(selector));    $(selectors).each(function () {      var $target = $(this);      var data = $target.data(DATA_KEY$3);      var config = data ? 'toggle' : $trigger.data();      Collapse._jQueryInterface.call($target, config);    });  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$3] = Collapse._jQueryInterface;  $.fn[NAME$3].Constructor = Collapse;  $.fn[NAME$3].noConflict = function () {    $.fn[NAME$3] = JQUERY_NO_CONFLICT$3;    return Collapse._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$4 = 'dropdown';  var VERSION$4 = '4.3.1';  var DATA_KEY$4 = 'bs.dropdown';  var EVENT_KEY$4 = "." + DATA_KEY$4;  var DATA_API_KEY$4 = '.data-api';  var JQUERY_NO_CONFLICT$4 = $.fn[NAME$4];  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);  var Event$4 = {    HIDE: "hide" + EVENT_KEY$4,    HIDDEN: "hidden" + EVENT_KEY$4,    SHOW: "show" + EVENT_KEY$4,    SHOWN: "shown" + EVENT_KEY$4,    CLICK: "click" + EVENT_KEY$4,    CLICK_DATA_API: "click" + EVENT_KEY$4 + DATA_API_KEY$4,    KEYDOWN_DATA_API: "keydown" + EVENT_KEY$4 + DATA_API_KEY$4,    KEYUP_DATA_API: "keyup" + EVENT_KEY$4 + DATA_API_KEY$4  };  var ClassName$4 = {    DISABLED: 'disabled',    SHOW: 'show',    DROPUP: 'dropup',    DROPRIGHT: 'dropright',    DROPLEFT: 'dropleft',    MENURIGHT: 'dropdown-menu-right',    MENULEFT: 'dropdown-menu-left',    POSITION_STATIC: 'position-static'  };  var Selector$4 = {    DATA_TOGGLE: '[data-toggle="dropdown"]',    FORM_CHILD: '.dropdown form',    MENU: '.dropdown-menu',    NAVBAR_NAV: '.navbar-nav',    VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'  };  var AttachmentMap = {    TOP: 'top-start',    TOPEND: 'top-end',    BOTTOM: 'bottom-start',    BOTTOMEND: 'bottom-end',    RIGHT: 'right-start',    RIGHTEND: 'right-end',    LEFT: 'left-start',    LEFTEND: 'left-end'  };  var Default$2 = {    offset: 0,    flip: true,    boundary: 'scrollParent',    reference: 'toggle',    display: 'dynamic'  };  var DefaultType$2 = {    offset: '(number|string|function)',    flip: 'boolean',    boundary: '(string|element)',    reference: '(string|element)',    display: 'string'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Dropdown =  /*#__PURE__*/  function () {    function Dropdown(element, config) {      this._element = element;      this._popper = null;      this._config = this._getConfig(config);      this._menu = this._getMenuElement();      this._inNavbar = this._detectNavbar();      this._addEventListeners();    } // Getters    var _proto = Dropdown.prototype;    // Public    _proto.toggle = function toggle() {      if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED)) {        return;      }      var parent = Dropdown._getParentFromElement(this._element);      var isActive = $(this._menu).hasClass(ClassName$4.SHOW);      Dropdown._clearMenus();      if (isActive) {        return;      }      var relatedTarget = {        relatedTarget: this._element      };      var showEvent = $.Event(Event$4.SHOW, relatedTarget);      $(parent).trigger(showEvent);      if (showEvent.isDefaultPrevented()) {        return;      } // Disable totally Popper.js for Dropdown in Navbar      if (!this._inNavbar) {        /**         * Check for Popper dependency         * Popper - https://popper.js.org         */        if (typeof Popper === 'undefined') {          throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)');        }        var referenceElement = this._element;        if (this._config.reference === 'parent') {          referenceElement = parent;        } else if (Util.isElement(this._config.reference)) {          referenceElement = this._config.reference; // Check if it's jQuery element          if (typeof this._config.reference.jquery !== 'undefined') {            referenceElement = this._config.reference[0];          }        } // If boundary is not `scrollParent`, then set position to `static`        // to allow the menu to "escape" the scroll parent's boundaries        // https://github.com/twbs/bootstrap/issues/24251        if (this._config.boundary !== 'scrollParent') {          $(parent).addClass(ClassName$4.POSITION_STATIC);        }        this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());      } // If this is a touch-enabled device we add extra      // empty mouseover listeners to the body's immediate children;      // only needed because of broken event delegation on iOS      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html      if ('ontouchstart' in document.documentElement && $(parent).closest(Selector$4.NAVBAR_NAV).length === 0) {        $(document.body).children().on('mouseover', null, $.noop);      }      this._element.focus();      this._element.setAttribute('aria-expanded', true);      $(this._menu).toggleClass(ClassName$4.SHOW);      $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.SHOWN, relatedTarget));    };    _proto.show = function show() {      if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED) || $(this._menu).hasClass(ClassName$4.SHOW)) {        return;      }      var relatedTarget = {        relatedTarget: this._element      };      var showEvent = $.Event(Event$4.SHOW, relatedTarget);      var parent = Dropdown._getParentFromElement(this._element);      $(parent).trigger(showEvent);      if (showEvent.isDefaultPrevented()) {        return;      }      $(this._menu).toggleClass(ClassName$4.SHOW);      $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.SHOWN, relatedTarget));    };    _proto.hide = function hide() {      if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED) || !$(this._menu).hasClass(ClassName$4.SHOW)) {        return;      }      var relatedTarget = {        relatedTarget: this._element      };      var hideEvent = $.Event(Event$4.HIDE, relatedTarget);      var parent = Dropdown._getParentFromElement(this._element);      $(parent).trigger(hideEvent);      if (hideEvent.isDefaultPrevented()) {        return;      }      $(this._menu).toggleClass(ClassName$4.SHOW);      $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.HIDDEN, relatedTarget));    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY$4);      $(this._element).off(EVENT_KEY$4);      this._element = null;      this._menu = null;      if (this._popper !== null) {        this._popper.destroy();        this._popper = null;      }    };    _proto.update = function update() {      this._inNavbar = this._detectNavbar();      if (this._popper !== null) {        this._popper.scheduleUpdate();      }    } // Private    ;    _proto._addEventListeners = function _addEventListeners() {      var _this = this;      $(this._element).on(Event$4.CLICK, function (event) {        event.preventDefault();        event.stopPropagation();        _this.toggle();      });    };    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, this.constructor.Default, $(this._element).data(), config);      Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);      return config;    };    _proto._getMenuElement = function _getMenuElement() {      if (!this._menu) {        var parent = Dropdown._getParentFromElement(this._element);        if (parent) {          this._menu = parent.querySelector(Selector$4.MENU);        }      }      return this._menu;    };    _proto._getPlacement = function _getPlacement() {      var $parentDropdown = $(this._element.parentNode);      var placement = AttachmentMap.BOTTOM; // Handle dropup      if ($parentDropdown.hasClass(ClassName$4.DROPUP)) {        placement = AttachmentMap.TOP;        if ($(this._menu).hasClass(ClassName$4.MENURIGHT)) {          placement = AttachmentMap.TOPEND;        }      } else if ($parentDropdown.hasClass(ClassName$4.DROPRIGHT)) {        placement = AttachmentMap.RIGHT;      } else if ($parentDropdown.hasClass(ClassName$4.DROPLEFT)) {        placement = AttachmentMap.LEFT;      } else if ($(this._menu).hasClass(ClassName$4.MENURIGHT)) {        placement = AttachmentMap.BOTTOMEND;      }      return placement;    };    _proto._detectNavbar = function _detectNavbar() {      return $(this._element).closest('.navbar').length > 0;    };    _proto._getOffset = function _getOffset() {      var _this2 = this;      var offset = {};      if (typeof this._config.offset === 'function') {        offset.fn = function (data) {          data.offsets = _objectSpread({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});          return data;        };      } else {        offset.offset = this._config.offset;      }      return offset;    };    _proto._getPopperConfig = function _getPopperConfig() {      var popperConfig = {        placement: this._getPlacement(),        modifiers: {          offset: this._getOffset(),          flip: {            enabled: this._config.flip          },          preventOverflow: {            boundariesElement: this._config.boundary          }        } // Disable Popper.js if we have a static display      };      if (this._config.display === 'static') {        popperConfig.modifiers.applyStyle = {          enabled: false        };      }      return popperConfig;    } // Static    ;    Dropdown._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$4);        var _config = typeof config === 'object' ? config : null;        if (!data) {          data = new Dropdown(this, _config);          $(this).data(DATA_KEY$4, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    Dropdown._clearMenus = function _clearMenus(event) {      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {        return;      }      var toggles = [].slice.call(document.querySelectorAll(Selector$4.DATA_TOGGLE));      for (var i = 0, len = toggles.length; i < len; i++) {        var parent = Dropdown._getParentFromElement(toggles[i]);        var context = $(toggles[i]).data(DATA_KEY$4);        var relatedTarget = {          relatedTarget: toggles[i]        };        if (event && event.type === 'click') {          relatedTarget.clickEvent = event;        }        if (!context) {          continue;        }        var dropdownMenu = context._menu;        if (!$(parent).hasClass(ClassName$4.SHOW)) {          continue;        }        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {          continue;        }        var hideEvent = $.Event(Event$4.HIDE, relatedTarget);        $(parent).trigger(hideEvent);        if (hideEvent.isDefaultPrevented()) {          continue;        } // If this is a touch-enabled device we remove the extra        // empty mouseover listeners we added for iOS support        if ('ontouchstart' in document.documentElement) {          $(document.body).children().off('mouseover', null, $.noop);        }        toggles[i].setAttribute('aria-expanded', 'false');        $(dropdownMenu).removeClass(ClassName$4.SHOW);        $(parent).removeClass(ClassName$4.SHOW).trigger($.Event(Event$4.HIDDEN, relatedTarget));      }    };    Dropdown._getParentFromElement = function _getParentFromElement(element) {      var parent;      var selector = Util.getSelectorFromElement(element);      if (selector) {        parent = document.querySelector(selector);      }      return parent || element.parentNode;    } // eslint-disable-next-line complexity    ;    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {      // If not input/textarea:      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command      // If input/textarea:      //  - If space key => not a dropdown command      //  - If key is other than escape      //    - If key is not up or down => not a dropdown command      //    - If trigger inside the menu => not a dropdown command      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(Selector$4.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {        return;      }      event.preventDefault();      event.stopPropagation();      if (this.disabled || $(this).hasClass(ClassName$4.DISABLED)) {        return;      }      var parent = Dropdown._getParentFromElement(this);      var isActive = $(parent).hasClass(ClassName$4.SHOW);      if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {        if (event.which === ESCAPE_KEYCODE) {          var toggle = parent.querySelector(Selector$4.DATA_TOGGLE);          $(toggle).trigger('focus');        }        $(this).trigger('click');        return;      }      var items = [].slice.call(parent.querySelectorAll(Selector$4.VISIBLE_ITEMS));      if (items.length === 0) {        return;      }      var index = items.indexOf(event.target);      if (event.which === ARROW_UP_KEYCODE && index > 0) {        // Up        index--;      }      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {        // Down        index++;      }      if (index < 0) {        index = 0;      }      items[index].focus();    };    _createClass(Dropdown, null, [{      key: "VERSION",      get: function get() {        return VERSION$4;      }    }, {      key: "Default",      get: function get() {        return Default$2;      }    }, {      key: "DefaultType",      get: function get() {        return DefaultType$2;      }    }]);    return Dropdown;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$4.KEYDOWN_DATA_API, Selector$4.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event$4.KEYDOWN_DATA_API, Selector$4.MENU, Dropdown._dataApiKeydownHandler).on(Event$4.CLICK_DATA_API + " " + Event$4.KEYUP_DATA_API, Dropdown._clearMenus).on(Event$4.CLICK_DATA_API, Selector$4.DATA_TOGGLE, function (event) {    event.preventDefault();    event.stopPropagation();    Dropdown._jQueryInterface.call($(this), 'toggle');  }).on(Event$4.CLICK_DATA_API, Selector$4.FORM_CHILD, function (e) {    e.stopPropagation();  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$4] = Dropdown._jQueryInterface;  $.fn[NAME$4].Constructor = Dropdown;  $.fn[NAME$4].noConflict = function () {    $.fn[NAME$4] = JQUERY_NO_CONFLICT$4;    return Dropdown._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$5 = 'modal';  var VERSION$5 = '4.3.1';  var DATA_KEY$5 = 'bs.modal';  var EVENT_KEY$5 = "." + DATA_KEY$5;  var DATA_API_KEY$5 = '.data-api';  var JQUERY_NO_CONFLICT$5 = $.fn[NAME$5];  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key  var Default$3 = {    backdrop: true,    keyboard: true,    focus: true,    show: true  };  var DefaultType$3 = {    backdrop: '(boolean|string)',    keyboard: 'boolean',    focus: 'boolean',    show: 'boolean'  };  var Event$5 = {    HIDE: "hide" + EVENT_KEY$5,    HIDDEN: "hidden" + EVENT_KEY$5,    SHOW: "show" + EVENT_KEY$5,    SHOWN: "shown" + EVENT_KEY$5,    FOCUSIN: "focusin" + EVENT_KEY$5,    RESIZE: "resize" + EVENT_KEY$5,    CLICK_DISMISS: "click.dismiss" + EVENT_KEY$5,    KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY$5,    MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY$5,    MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY$5,    CLICK_DATA_API: "click" + EVENT_KEY$5 + DATA_API_KEY$5  };  var ClassName$5 = {    SCROLLABLE: 'modal-dialog-scrollable',    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',    BACKDROP: 'modal-backdrop',    OPEN: 'modal-open',    FADE: 'fade',    SHOW: 'show'  };  var Selector$5 = {    DIALOG: '.modal-dialog',    MODAL_BODY: '.modal-body',    DATA_TOGGLE: '[data-toggle="modal"]',    DATA_DISMISS: '[data-dismiss="modal"]',    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',    STICKY_CONTENT: '.sticky-top'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Modal =  /*#__PURE__*/  function () {    function Modal(element, config) {      this._config = this._getConfig(config);      this._element = element;      this._dialog = element.querySelector(Selector$5.DIALOG);      this._backdrop = null;      this._isShown = false;      this._isBodyOverflowing = false;      this._ignoreBackdropClick = false;      this._isTransitioning = false;      this._scrollbarWidth = 0;    } // Getters    var _proto = Modal.prototype;    // Public    _proto.toggle = function toggle(relatedTarget) {      return this._isShown ? this.hide() : this.show(relatedTarget);    };    _proto.show = function show(relatedTarget) {      var _this = this;      if (this._isShown || this._isTransitioning) {        return;      }      if ($(this._element).hasClass(ClassName$5.FADE)) {        this._isTransitioning = true;      }      var showEvent = $.Event(Event$5.SHOW, {        relatedTarget: relatedTarget      });      $(this._element).trigger(showEvent);      if (this._isShown || showEvent.isDefaultPrevented()) {        return;      }      this._isShown = true;      this._checkScrollbar();      this._setScrollbar();      this._adjustDialog();      this._setEscapeEvent();      this._setResizeEvent();      $(this._element).on(Event$5.CLICK_DISMISS, Selector$5.DATA_DISMISS, function (event) {        return _this.hide(event);      });      $(this._dialog).on(Event$5.MOUSEDOWN_DISMISS, function () {        $(_this._element).one(Event$5.MOUSEUP_DISMISS, function (event) {          if ($(event.target).is(_this._element)) {            _this._ignoreBackdropClick = true;          }        });      });      this._showBackdrop(function () {        return _this._showElement(relatedTarget);      });    };    _proto.hide = function hide(event) {      var _this2 = this;      if (event) {        event.preventDefault();      }      if (!this._isShown || this._isTransitioning) {        return;      }      var hideEvent = $.Event(Event$5.HIDE);      $(this._element).trigger(hideEvent);      if (!this._isShown || hideEvent.isDefaultPrevented()) {        return;      }      this._isShown = false;      var transition = $(this._element).hasClass(ClassName$5.FADE);      if (transition) {        this._isTransitioning = true;      }      this._setEscapeEvent();      this._setResizeEvent();      $(document).off(Event$5.FOCUSIN);      $(this._element).removeClass(ClassName$5.SHOW);      $(this._element).off(Event$5.CLICK_DISMISS);      $(this._dialog).off(Event$5.MOUSEDOWN_DISMISS);      if (transition) {        var transitionDuration = Util.getTransitionDurationFromElement(this._element);        $(this._element).one(Util.TRANSITION_END, function (event) {          return _this2._hideModal(event);        }).emulateTransitionEnd(transitionDuration);      } else {        this._hideModal();      }    };    _proto.dispose = function dispose() {      [window, this._element, this._dialog].forEach(function (htmlElement) {        return $(htmlElement).off(EVENT_KEY$5);      });      /**       * `document` has 2 events `Event.FOCUSIN` and `Event.CLICK_DATA_API`       * Do not move `document` in `htmlElements` array       * It will remove `Event.CLICK_DATA_API` event that should remain       */      $(document).off(Event$5.FOCUSIN);      $.removeData(this._element, DATA_KEY$5);      this._config = null;      this._element = null;      this._dialog = null;      this._backdrop = null;      this._isShown = null;      this._isBodyOverflowing = null;      this._ignoreBackdropClick = null;      this._isTransitioning = null;      this._scrollbarWidth = null;    };    _proto.handleUpdate = function handleUpdate() {      this._adjustDialog();    } // Private    ;    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, Default$3, config);      Util.typeCheckConfig(NAME$5, config, DefaultType$3);      return config;    };    _proto._showElement = function _showElement(relatedTarget) {      var _this3 = this;      var transition = $(this._element).hasClass(ClassName$5.FADE);      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {        // Don't move modal's DOM position        document.body.appendChild(this._element);      }      this._element.style.display = 'block';      this._element.removeAttribute('aria-hidden');      this._element.setAttribute('aria-modal', true);      if ($(this._dialog).hasClass(ClassName$5.SCROLLABLE)) {        this._dialog.querySelector(Selector$5.MODAL_BODY).scrollTop = 0;      } else {        this._element.scrollTop = 0;      }      if (transition) {        Util.reflow(this._element);      }      $(this._element).addClass(ClassName$5.SHOW);      if (this._config.focus) {        this._enforceFocus();      }      var shownEvent = $.Event(Event$5.SHOWN, {        relatedTarget: relatedTarget      });      var transitionComplete = function transitionComplete() {        if (_this3._config.focus) {          _this3._element.focus();        }        _this3._isTransitioning = false;        $(_this3._element).trigger(shownEvent);      };      if (transition) {        var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);      } else {        transitionComplete();      }    };    _proto._enforceFocus = function _enforceFocus() {      var _this4 = this;      $(document).off(Event$5.FOCUSIN) // Guard against infinite focus loop      .on(Event$5.FOCUSIN, function (event) {        if (document !== event.target && _this4._element !== event.target && $(_this4._element).has(event.target).length === 0) {          _this4._element.focus();        }      });    };    _proto._setEscapeEvent = function _setEscapeEvent() {      var _this5 = this;      if (this._isShown && this._config.keyboard) {        $(this._element).on(Event$5.KEYDOWN_DISMISS, function (event) {          if (event.which === ESCAPE_KEYCODE$1) {            event.preventDefault();            _this5.hide();          }        });      } else if (!this._isShown) {        $(this._element).off(Event$5.KEYDOWN_DISMISS);      }    };    _proto._setResizeEvent = function _setResizeEvent() {      var _this6 = this;      if (this._isShown) {        $(window).on(Event$5.RESIZE, function (event) {          return _this6.handleUpdate(event);        });      } else {        $(window).off(Event$5.RESIZE);      }    };    _proto._hideModal = function _hideModal() {      var _this7 = this;      this._element.style.display = 'none';      this._element.setAttribute('aria-hidden', true);      this._element.removeAttribute('aria-modal');      this._isTransitioning = false;      this._showBackdrop(function () {        $(document.body).removeClass(ClassName$5.OPEN);        _this7._resetAdjustments();        _this7._resetScrollbar();        $(_this7._element).trigger(Event$5.HIDDEN);      });    };    _proto._removeBackdrop = function _removeBackdrop() {      if (this._backdrop) {        $(this._backdrop).remove();        this._backdrop = null;      }    };    _proto._showBackdrop = function _showBackdrop(callback) {      var _this8 = this;      var animate = $(this._element).hasClass(ClassName$5.FADE) ? ClassName$5.FADE : '';      if (this._isShown && this._config.backdrop) {        this._backdrop = document.createElement('div');        this._backdrop.className = ClassName$5.BACKDROP;        if (animate) {          this._backdrop.classList.add(animate);        }        $(this._backdrop).appendTo(document.body);        $(this._element).on(Event$5.CLICK_DISMISS, function (event) {          if (_this8._ignoreBackdropClick) {            _this8._ignoreBackdropClick = false;            return;          }          if (event.target !== event.currentTarget) {            return;          }          if (_this8._config.backdrop === 'static') {            _this8._element.focus();          } else {            _this8.hide();          }        });        if (animate) {          Util.reflow(this._backdrop);        }        $(this._backdrop).addClass(ClassName$5.SHOW);        if (!callback) {          return;        }        if (!animate) {          callback();          return;        }        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);      } else if (!this._isShown && this._backdrop) {        $(this._backdrop).removeClass(ClassName$5.SHOW);        var callbackRemove = function callbackRemove() {          _this8._removeBackdrop();          if (callback) {            callback();          }        };        if ($(this._element).hasClass(ClassName$5.FADE)) {          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);        } else {          callbackRemove();        }      } else if (callback) {        callback();      }    } // ----------------------------------------------------------------------    // the following methods are used to handle overflowing modals    // todo (fat): these should probably be refactored out of modal.js    // ----------------------------------------------------------------------    ;    _proto._adjustDialog = function _adjustDialog() {      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;      if (!this._isBodyOverflowing && isModalOverflowing) {        this._element.style.paddingLeft = this._scrollbarWidth + "px";      }      if (this._isBodyOverflowing && !isModalOverflowing) {        this._element.style.paddingRight = this._scrollbarWidth + "px";      }    };    _proto._resetAdjustments = function _resetAdjustments() {      this._element.style.paddingLeft = '';      this._element.style.paddingRight = '';    };    _proto._checkScrollbar = function _checkScrollbar() {      var rect = document.body.getBoundingClientRect();      this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;      this._scrollbarWidth = this._getScrollbarWidth();    };    _proto._setScrollbar = function _setScrollbar() {      var _this9 = this;      if (this._isBodyOverflowing) {        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set        var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT));        var stickyContent = [].slice.call(document.querySelectorAll(Selector$5.STICKY_CONTENT)); // Adjust fixed content padding        $(fixedContent).each(function (index, element) {          var actualPadding = element.style.paddingRight;          var calculatedPadding = $(element).css('padding-right');          $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + "px");        }); // Adjust sticky content margin        $(stickyContent).each(function (index, element) {          var actualMargin = element.style.marginRight;          var calculatedMargin = $(element).css('margin-right');          $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + "px");        }); // Adjust body padding        var actualPadding = document.body.style.paddingRight;        var calculatedPadding = $(document.body).css('padding-right');        $(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");      }      $(document.body).addClass(ClassName$5.OPEN);    };    _proto._resetScrollbar = function _resetScrollbar() {      // Restore fixed content padding      var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT));      $(fixedContent).each(function (index, element) {        var padding = $(element).data('padding-right');        $(element).removeData('padding-right');        element.style.paddingRight = padding ? padding : '';      }); // Restore sticky content      var elements = [].slice.call(document.querySelectorAll("" + Selector$5.STICKY_CONTENT));      $(elements).each(function (index, element) {        var margin = $(element).data('margin-right');        if (typeof margin !== 'undefined') {          $(element).css('margin-right', margin).removeData('margin-right');        }      }); // Restore body padding      var padding = $(document.body).data('padding-right');      $(document.body).removeData('padding-right');      document.body.style.paddingRight = padding ? padding : '';    };    _proto._getScrollbarWidth = function _getScrollbarWidth() {      // thx d.walsh      var scrollDiv = document.createElement('div');      scrollDiv.className = ClassName$5.SCROLLBAR_MEASURER;      document.body.appendChild(scrollDiv);      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;      document.body.removeChild(scrollDiv);      return scrollbarWidth;    } // Static    ;    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {      return this.each(function () {        var data = $(this).data(DATA_KEY$5);        var _config = _objectSpread({}, Default$3, $(this).data(), typeof config === 'object' && config ? config : {});        if (!data) {          data = new Modal(this, _config);          $(this).data(DATA_KEY$5, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config](relatedTarget);        } else if (_config.show) {          data.show(relatedTarget);        }      });    };    _createClass(Modal, null, [{      key: "VERSION",      get: function get() {        return VERSION$5;      }    }, {      key: "Default",      get: function get() {        return Default$3;      }    }]);    return Modal;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$5.CLICK_DATA_API, Selector$5.DATA_TOGGLE, function (event) {    var _this10 = this;    var target;    var selector = Util.getSelectorFromElement(this);    if (selector) {      target = document.querySelector(selector);    }    var config = $(target).data(DATA_KEY$5) ? 'toggle' : _objectSpread({}, $(target).data(), $(this).data());    if (this.tagName === 'A' || this.tagName === 'AREA') {      event.preventDefault();    }    var $target = $(target).one(Event$5.SHOW, function (showEvent) {      if (showEvent.isDefaultPrevented()) {        // Only register focus restorer if modal will actually get shown        return;      }      $target.one(Event$5.HIDDEN, function () {        if ($(_this10).is(':visible')) {          _this10.focus();        }      });    });    Modal._jQueryInterface.call($(target), config, this);  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$5] = Modal._jQueryInterface;  $.fn[NAME$5].Constructor = Modal;  $.fn[NAME$5].noConflict = function () {    $.fn[NAME$5] = JQUERY_NO_CONFLICT$5;    return Modal._jQueryInterface;  };  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): tools/sanitizer.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;  var DefaultWhitelist = {    // Global attributes allowed on any supplied element below.    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],    a: ['target', 'href', 'title', 'rel'],    area: [],    b: [],    br: [],    col: [],    code: [],    div: [],    em: [],    hr: [],    h1: [],    h2: [],    h3: [],    h4: [],    h5: [],    h6: [],    i: [],    img: ['src', 'alt', 'title', 'width', 'height'],    li: [],    ol: [],    p: [],    pre: [],    s: [],    small: [],    span: [],    sub: [],    sup: [],    strong: [],    u: [],    ul: []    /**     * A pattern that recognizes a commonly useful subset of URLs that are safe.     *     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts     */  };  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;  /**   * A pattern that matches safe data URLs. Only matches image, video and audio types.   *   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts   */  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;  function allowedAttribute(attr, allowedAttributeList) {    var attrName = attr.nodeName.toLowerCase();    if (allowedAttributeList.indexOf(attrName) !== -1) {      if (uriAttrs.indexOf(attrName) !== -1) {        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));      }      return true;    }    var regExp = allowedAttributeList.filter(function (attrRegex) {      return attrRegex instanceof RegExp;    }); // Check if a regular expression validates the attribute.    for (var i = 0, l = regExp.length; i < l; i++) {      if (attrName.match(regExp[i])) {        return true;      }    }    return false;  }  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {    if (unsafeHtml.length === 0) {      return unsafeHtml;    }    if (sanitizeFn && typeof sanitizeFn === 'function') {      return sanitizeFn(unsafeHtml);    }    var domParser = new window.DOMParser();    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');    var whitelistKeys = Object.keys(whiteList);    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));    var _loop = function _loop(i, len) {      var el = elements[i];      var elName = el.nodeName.toLowerCase();      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {        el.parentNode.removeChild(el);        return "continue";      }      var attributeList = [].slice.call(el.attributes);      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);      attributeList.forEach(function (attr) {        if (!allowedAttribute(attr, whitelistedAttributes)) {          el.removeAttribute(attr.nodeName);        }      });    };    for (var i = 0, len = elements.length; i < len; i++) {      var _ret = _loop(i, len);      if (_ret === "continue") continue;    }    return createdDocument.body.innerHTML;  }  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$6 = 'tooltip';  var VERSION$6 = '4.3.1';  var DATA_KEY$6 = 'bs.tooltip';  var EVENT_KEY$6 = "." + DATA_KEY$6;  var JQUERY_NO_CONFLICT$6 = $.fn[NAME$6];  var CLASS_PREFIX = 'bs-tooltip';  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];  var DefaultType$4 = {    animation: 'boolean',    template: 'string',    title: '(string|element|function)',    trigger: 'string',    delay: '(number|object)',    html: 'boolean',    selector: '(string|boolean)',    placement: '(string|function)',    offset: '(number|string|function)',    container: '(string|element|boolean)',    fallbackPlacement: '(string|array)',    boundary: '(string|element)',    sanitize: 'boolean',    sanitizeFn: '(null|function)',    whiteList: 'object'  };  var AttachmentMap$1 = {    AUTO: 'auto',    TOP: 'top',    RIGHT: 'right',    BOTTOM: 'bottom',    LEFT: 'left'  };  var Default$4 = {    animation: true,    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow">' + '<div class="tooltip-inner">',    trigger: 'hover focus',    title: '',    delay: 0,    html: false,    selector: false,    placement: 'top',    offset: 0,    container: false,    fallbackPlacement: 'flip',    boundary: 'scrollParent',    sanitize: true,    sanitizeFn: null,    whiteList: DefaultWhitelist  };  var HoverState = {    SHOW: 'show',    OUT: 'out'  };  var Event$6 = {    HIDE: "hide" + EVENT_KEY$6,    HIDDEN: "hidden" + EVENT_KEY$6,    SHOW: "show" + EVENT_KEY$6,    SHOWN: "shown" + EVENT_KEY$6,    INSERTED: "inserted" + EVENT_KEY$6,    CLICK: "click" + EVENT_KEY$6,    FOCUSIN: "focusin" + EVENT_KEY$6,    FOCUSOUT: "focusout" + EVENT_KEY$6,    MOUSEENTER: "mouseenter" + EVENT_KEY$6,    MOUSELEAVE: "mouseleave" + EVENT_KEY$6  };  var ClassName$6 = {    FADE: 'fade',    SHOW: 'show'  };  var Selector$6 = {    TOOLTIP: '.tooltip',    TOOLTIP_INNER: '.tooltip-inner',    ARROW: '.arrow'  };  var Trigger = {    HOVER: 'hover',    FOCUS: 'focus',    CLICK: 'click',    MANUAL: 'manual'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Tooltip =  /*#__PURE__*/  function () {    function Tooltip(element, config) {      /**       * Check for Popper dependency       * Popper - https://popper.js.org       */      if (typeof Popper === 'undefined') {        throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)');      } // private      this._isEnabled = true;      this._timeout = 0;      this._hoverState = '';      this._activeTrigger = {};      this._popper = null; // Protected      this.element = element;      this.config = this._getConfig(config);      this.tip = null;      this._setListeners();    } // Getters    var _proto = Tooltip.prototype;    // Public    _proto.enable = function enable() {      this._isEnabled = true;    };    _proto.disable = function disable() {      this._isEnabled = false;    };    _proto.toggleEnabled = function toggleEnabled() {      this._isEnabled = !this._isEnabled;    };    _proto.toggle = function toggle(event) {      if (!this._isEnabled) {        return;      }      if (event) {        var dataKey = this.constructor.DATA_KEY;        var context = $(event.currentTarget).data(dataKey);        if (!context) {          context = new this.constructor(event.currentTarget, this._getDelegateConfig());          $(event.currentTarget).data(dataKey, context);        }        context._activeTrigger.click = !context._activeTrigger.click;        if (context._isWithActiveTrigger()) {          context._enter(null, context);        } else {          context._leave(null, context);        }      } else {        if ($(this.getTipElement()).hasClass(ClassName$6.SHOW)) {          this._leave(null, this);          return;        }        this._enter(null, this);      }    };    _proto.dispose = function dispose() {      clearTimeout(this._timeout);      $.removeData(this.element, this.constructor.DATA_KEY);      $(this.element).off(this.constructor.EVENT_KEY);      $(this.element).closest('.modal').off('hide.bs.modal');      if (this.tip) {        $(this.tip).remove();      }      this._isEnabled = null;      this._timeout = null;      this._hoverState = null;      this._activeTrigger = null;      if (this._popper !== null) {        this._popper.destroy();      }      this._popper = null;      this.element = null;      this.config = null;      this.tip = null;    };    _proto.show = function show() {      var _this = this;      if ($(this.element).css('display') === 'none') {        throw new Error('Please use show on visible elements');      }      var showEvent = $.Event(this.constructor.Event.SHOW);      if (this.isWithContent() && this._isEnabled) {        $(this.element).trigger(showEvent);        var shadowRoot = Util.findShadowRoot(this.element);        var isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);        if (showEvent.isDefaultPrevented() || !isInTheDom) {          return;        }        var tip = this.getTipElement();        var tipId = Util.getUID(this.constructor.NAME);        tip.setAttribute('id', tipId);        this.element.setAttribute('aria-describedby', tipId);        this.setContent();        if (this.config.animation) {          $(tip).addClass(ClassName$6.FADE);        }        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;        var attachment = this._getAttachment(placement);        this.addAttachmentClass(attachment);        var container = this._getContainer();        $(tip).data(this.constructor.DATA_KEY, this);        if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {          $(tip).appendTo(container);        }        $(this.element).trigger(this.constructor.Event.INSERTED);        this._popper = new Popper(this.element, tip, {          placement: attachment,          modifiers: {            offset: this._getOffset(),            flip: {              behavior: this.config.fallbackPlacement            },            arrow: {              element: Selector$6.ARROW            },            preventOverflow: {              boundariesElement: this.config.boundary            }          },          onCreate: function onCreate(data) {            if (data.originalPlacement !== data.placement) {              _this._handlePopperPlacementChange(data);            }          },          onUpdate: function onUpdate(data) {            return _this._handlePopperPlacementChange(data);          }        });        $(tip).addClass(ClassName$6.SHOW); // If this is a touch-enabled device we add extra        // empty mouseover listeners to the body's immediate children;        // only needed because of broken event delegation on iOS        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html        if ('ontouchstart' in document.documentElement) {          $(document.body).children().on('mouseover', null, $.noop);        }        var complete = function complete() {          if (_this.config.animation) {            _this._fixTransition();          }          var prevHoverState = _this._hoverState;          _this._hoverState = null;          $(_this.element).trigger(_this.constructor.Event.SHOWN);          if (prevHoverState === HoverState.OUT) {            _this._leave(null, _this);          }        };        if ($(this.tip).hasClass(ClassName$6.FADE)) {          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        } else {          complete();        }      }    };    _proto.hide = function hide(callback) {      var _this2 = this;      var tip = this.getTipElement();      var hideEvent = $.Event(this.constructor.Event.HIDE);      var complete = function complete() {        if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {          tip.parentNode.removeChild(tip);        }        _this2._cleanTipClass();        _this2.element.removeAttribute('aria-describedby');        $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);        if (_this2._popper !== null) {          _this2._popper.destroy();        }        if (callback) {          callback();        }      };      $(this.element).trigger(hideEvent);      if (hideEvent.isDefaultPrevented()) {        return;      }      $(tip).removeClass(ClassName$6.SHOW); // If this is a touch-enabled device we remove the extra      // empty mouseover listeners we added for iOS support      if ('ontouchstart' in document.documentElement) {        $(document.body).children().off('mouseover', null, $.noop);      }      this._activeTrigger[Trigger.CLICK] = false;      this._activeTrigger[Trigger.FOCUS] = false;      this._activeTrigger[Trigger.HOVER] = false;      if ($(this.tip).hasClass(ClassName$6.FADE)) {        var transitionDuration = Util.getTransitionDurationFromElement(tip);        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      } else {        complete();      }      this._hoverState = '';    };    _proto.update = function update() {      if (this._popper !== null) {        this._popper.scheduleUpdate();      }    } // Protected    ;    _proto.isWithContent = function isWithContent() {      return Boolean(this.getTitle());    };    _proto.addAttachmentClass = function addAttachmentClass(attachment) {      $(this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);    };    _proto.getTipElement = function getTipElement() {      this.tip = this.tip || $(this.config.template)[0];      return this.tip;    };    _proto.setContent = function setContent() {      var tip = this.getTipElement();      this.setElementContent($(tip.querySelectorAll(Selector$6.TOOLTIP_INNER)), this.getTitle());      $(tip).removeClass(ClassName$6.FADE + " " + ClassName$6.SHOW);    };    _proto.setElementContent = function setElementContent($element, content) {      if (typeof content === 'object' && (content.nodeType || content.jquery)) {        // Content is a DOM node or a jQuery        if (this.config.html) {          if (!$(content).parent().is($element)) {            $element.empty().append(content);          }        } else {          $element.text($(content).text());        }        return;      }      if (this.config.html) {        if (this.config.sanitize) {          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);        }        $element.html(content);      } else {        $element.text(content);      }    };    _proto.getTitle = function getTitle() {      var title = this.element.getAttribute('data-original-title');      if (!title) {        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;      }      return title;    } // Private    ;    _proto._getOffset = function _getOffset() {      var _this3 = this;      var offset = {};      if (typeof this.config.offset === 'function') {        offset.fn = function (data) {          data.offsets = _objectSpread({}, data.offsets, _this3.config.offset(data.offsets, _this3.element) || {});          return data;        };      } else {        offset.offset = this.config.offset;      }      return offset;    };    _proto._getContainer = function _getContainer() {      if (this.config.container === false) {        return document.body;      }      if (Util.isElement(this.config.container)) {        return $(this.config.container);      }      return $(document).find(this.config.container);    };    _proto._getAttachment = function _getAttachment(placement) {      return AttachmentMap$1[placement.toUpperCase()];    };    _proto._setListeners = function _setListeners() {      var _this4 = this;      var triggers = this.config.trigger.split(' ');      triggers.forEach(function (trigger) {        if (trigger === 'click') {          $(_this4.element).on(_this4.constructor.Event.CLICK, _this4.config.selector, function (event) {            return _this4.toggle(event);          });        } else if (trigger !== Trigger.MANUAL) {          var eventIn = trigger === Trigger.HOVER ? _this4.constructor.Event.MOUSEENTER : _this4.constructor.Event.FOCUSIN;          var eventOut = trigger === Trigger.HOVER ? _this4.constructor.Event.MOUSELEAVE : _this4.constructor.Event.FOCUSOUT;          $(_this4.element).on(eventIn, _this4.config.selector, function (event) {            return _this4._enter(event);          }).on(eventOut, _this4.config.selector, function (event) {            return _this4._leave(event);          });        }      });      $(this.element).closest('.modal').on('hide.bs.modal', function () {        if (_this4.element) {          _this4.hide();        }      });      if (this.config.selector) {        this.config = _objectSpread({}, this.config, {          trigger: 'manual',          selector: ''        });      } else {        this._fixTitle();      }    };    _proto._fixTitle = function _fixTitle() {      var titleType = typeof this.element.getAttribute('data-original-title');      if (this.element.getAttribute('title') || titleType !== 'string') {        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');        this.element.setAttribute('title', '');      }    };    _proto._enter = function _enter(event, context) {      var dataKey = this.constructor.DATA_KEY;      context = context || $(event.currentTarget).data(dataKey);      if (!context) {        context = new this.constructor(event.currentTarget, this._getDelegateConfig());        $(event.currentTarget).data(dataKey, context);      }      if (event) {        context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;      }      if ($(context.getTipElement()).hasClass(ClassName$6.SHOW) || context._hoverState === HoverState.SHOW) {        context._hoverState = HoverState.SHOW;        return;      }      clearTimeout(context._timeout);      context._hoverState = HoverState.SHOW;      if (!context.config.delay || !context.config.delay.show) {        context.show();        return;      }      context._timeout = setTimeout(function () {        if (context._hoverState === HoverState.SHOW) {          context.show();        }      }, context.config.delay.show);    };    _proto._leave = function _leave(event, context) {      var dataKey = this.constructor.DATA_KEY;      context = context || $(event.currentTarget).data(dataKey);      if (!context) {        context = new this.constructor(event.currentTarget, this._getDelegateConfig());        $(event.currentTarget).data(dataKey, context);      }      if (event) {        context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;      }      if (context._isWithActiveTrigger()) {        return;      }      clearTimeout(context._timeout);      context._hoverState = HoverState.OUT;      if (!context.config.delay || !context.config.delay.hide) {        context.hide();        return;      }      context._timeout = setTimeout(function () {        if (context._hoverState === HoverState.OUT) {          context.hide();        }      }, context.config.delay.hide);    };    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {      for (var trigger in this._activeTrigger) {        if (this._activeTrigger[trigger]) {          return true;        }      }      return false;    };    _proto._getConfig = function _getConfig(config) {      var dataAttributes = $(this.element).data();      Object.keys(dataAttributes).forEach(function (dataAttr) {        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {          delete dataAttributes[dataAttr];        }      });      config = _objectSpread({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});      if (typeof config.delay === 'number') {        config.delay = {          show: config.delay,          hide: config.delay        };      }      if (typeof config.title === 'number') {        config.title = config.title.toString();      }      if (typeof config.content === 'number') {        config.content = config.content.toString();      }      Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);      if (config.sanitize) {        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);      }      return config;    };    _proto._getDelegateConfig = function _getDelegateConfig() {      var config = {};      if (this.config) {        for (var key in this.config) {          if (this.constructor.Default[key] !== this.config[key]) {            config[key] = this.config[key];          }        }      }      return config;    };    _proto._cleanTipClass = function _cleanTipClass() {      var $tip = $(this.getTipElement());      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);      if (tabClass !== null && tabClass.length) {        $tip.removeClass(tabClass.join(''));      }    };    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {      var popperInstance = popperData.instance;      this.tip = popperInstance.popper;      this._cleanTipClass();      this.addAttachmentClass(this._getAttachment(popperData.placement));    };    _proto._fixTransition = function _fixTransition() {      var tip = this.getTipElement();      var initConfigAnimation = this.config.animation;      if (tip.getAttribute('x-placement') !== null) {        return;      }      $(tip).removeClass(ClassName$6.FADE);      this.config.animation = false;      this.hide();      this.show();      this.config.animation = initConfigAnimation;    } // Static    ;    Tooltip._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$6);        var _config = typeof config === 'object' && config;        if (!data && /dispose|hide/.test(config)) {          return;        }        if (!data) {          data = new Tooltip(this, _config);          $(this).data(DATA_KEY$6, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    _createClass(Tooltip, null, [{      key: "VERSION",      get: function get() {        return VERSION$6;      }    }, {      key: "Default",      get: function get() {        return Default$4;      }    }, {      key: "NAME",      get: function get() {        return NAME$6;      }    }, {      key: "DATA_KEY",      get: function get() {        return DATA_KEY$6;      }    }, {      key: "Event",      get: function get() {        return Event$6;      }    }, {      key: "EVENT_KEY",      get: function get() {        return EVENT_KEY$6;      }    }, {      key: "DefaultType",      get: function get() {        return DefaultType$4;      }    }]);    return Tooltip;  }();  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$6] = Tooltip._jQueryInterface;  $.fn[NAME$6].Constructor = Tooltip;  $.fn[NAME$6].noConflict = function () {    $.fn[NAME$6] = JQUERY_NO_CONFLICT$6;    return Tooltip._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$7 = 'popover';  var VERSION$7 = '4.3.1';  var DATA_KEY$7 = 'bs.popover';  var EVENT_KEY$7 = "." + DATA_KEY$7;  var JQUERY_NO_CONFLICT$7 = $.fn[NAME$7];  var CLASS_PREFIX$1 = 'bs-popover';  var BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)" + CLASS_PREFIX$1 + "\\S+", 'g');  var Default$5 = _objectSpread({}, Tooltip.Default, {    placement: 'right',    trigger: 'click',    content: '',    template: '<div class="popover" role="tooltip">' + '<div class="arrow">' + '<h3 class="popover-header">' + '<div class="popover-body">'  });  var DefaultType$5 = _objectSpread({}, Tooltip.DefaultType, {    content: '(string|element|function)'  });  var ClassName$7 = {    FADE: 'fade',    SHOW: 'show'  };  var Selector$7 = {    TITLE: '.popover-header',    CONTENT: '.popover-body'  };  var Event$7 = {    HIDE: "hide" + EVENT_KEY$7,    HIDDEN: "hidden" + EVENT_KEY$7,    SHOW: "show" + EVENT_KEY$7,    SHOWN: "shown" + EVENT_KEY$7,    INSERTED: "inserted" + EVENT_KEY$7,    CLICK: "click" + EVENT_KEY$7,    FOCUSIN: "focusin" + EVENT_KEY$7,    FOCUSOUT: "focusout" + EVENT_KEY$7,    MOUSEENTER: "mouseenter" + EVENT_KEY$7,    MOUSELEAVE: "mouseleave" + EVENT_KEY$7    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Popover =  /*#__PURE__*/  function (_Tooltip) {    _inheritsLoose(Popover, _Tooltip);    function Popover() {      return _Tooltip.apply(this, arguments) || this;    }    var _proto = Popover.prototype;    // Overrides    _proto.isWithContent = function isWithContent() {      return this.getTitle() || this._getContent();    };    _proto.addAttachmentClass = function addAttachmentClass(attachment) {      $(this.getTipElement()).addClass(CLASS_PREFIX$1 + "-" + attachment);    };    _proto.getTipElement = function getTipElement() {      this.tip = this.tip || $(this.config.template)[0];      return this.tip;    };    _proto.setContent = function setContent() {      var $tip = $(this.getTipElement()); // We use append for html objects to maintain js events      this.setElementContent($tip.find(Selector$7.TITLE), this.getTitle());      var content = this._getContent();      if (typeof content === 'function') {        content = content.call(this.element);      }      this.setElementContent($tip.find(Selector$7.CONTENT), content);      $tip.removeClass(ClassName$7.FADE + " " + ClassName$7.SHOW);    } // Private    ;    _proto._getContent = function _getContent() {      return this.element.getAttribute('data-content') || this.config.content;    };    _proto._cleanTipClass = function _cleanTipClass() {      var $tip = $(this.getTipElement());      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);      if (tabClass !== null && tabClass.length > 0) {        $tip.removeClass(tabClass.join(''));      }    } // Static    ;    Popover._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$7);        var _config = typeof config === 'object' ? config : null;        if (!data && /dispose|hide/.test(config)) {          return;        }        if (!data) {          data = new Popover(this, _config);          $(this).data(DATA_KEY$7, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    _createClass(Popover, null, [{      key: "VERSION",      // Getters      get: function get() {        return VERSION$7;      }    }, {      key: "Default",      get: function get() {        return Default$5;      }    }, {      key: "NAME",      get: function get() {        return NAME$7;      }    }, {      key: "DATA_KEY",      get: function get() {        return DATA_KEY$7;      }    }, {      key: "Event",      get: function get() {        return Event$7;      }    }, {      key: "EVENT_KEY",      get: function get() {        return EVENT_KEY$7;      }    }, {      key: "DefaultType",      get: function get() {        return DefaultType$5;      }    }]);    return Popover;  }(Tooltip);  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$7] = Popover._jQueryInterface;  $.fn[NAME$7].Constructor = Popover;  $.fn[NAME$7].noConflict = function () {    $.fn[NAME$7] = JQUERY_NO_CONFLICT$7;    return Popover._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$8 = 'scrollspy';  var VERSION$8 = '4.3.1';  var DATA_KEY$8 = 'bs.scrollspy';  var EVENT_KEY$8 = "." + DATA_KEY$8;  var DATA_API_KEY$6 = '.data-api';  var JQUERY_NO_CONFLICT$8 = $.fn[NAME$8];  var Default$6 = {    offset: 10,    method: 'auto',    target: ''  };  var DefaultType$6 = {    offset: 'number',    method: 'string',    target: '(string|element)'  };  var Event$8 = {    ACTIVATE: "activate" + EVENT_KEY$8,    SCROLL: "scroll" + EVENT_KEY$8,    LOAD_DATA_API: "load" + EVENT_KEY$8 + DATA_API_KEY$6  };  var ClassName$8 = {    DROPDOWN_ITEM: 'dropdown-item',    DROPDOWN_MENU: 'dropdown-menu',    ACTIVE: 'active'  };  var Selector$8 = {    DATA_SPY: '[data-spy="scroll"]',    ACTIVE: '.active',    NAV_LIST_GROUP: '.nav, .list-group',    NAV_LINKS: '.nav-link',    NAV_ITEMS: '.nav-item',    LIST_ITEMS: '.list-group-item',    DROPDOWN: '.dropdown',    DROPDOWN_ITEMS: '.dropdown-item',    DROPDOWN_TOGGLE: '.dropdown-toggle'  };  var OffsetMethod = {    OFFSET: 'offset',    POSITION: 'position'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var ScrollSpy =  /*#__PURE__*/  function () {    function ScrollSpy(element, config) {      var _this = this;      this._element = element;      this._scrollElement = element.tagName === 'BODY' ? window : element;      this._config = this._getConfig(config);      this._selector = this._config.target + " " + Selector$8.NAV_LINKS + "," + (this._config.target + " " + Selector$8.LIST_ITEMS + ",") + (this._config.target + " " + Selector$8.DROPDOWN_ITEMS);      this._offsets = [];      this._targets = [];      this._activeTarget = null;      this._scrollHeight = 0;      $(this._scrollElement).on(Event$8.SCROLL, function (event) {        return _this._process(event);      });      this.refresh();      this._process();    } // Getters    var _proto = ScrollSpy.prototype;    // Public    _proto.refresh = function refresh() {      var _this2 = this;      var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;      this._offsets = [];      this._targets = [];      this._scrollHeight = this._getScrollHeight();      var targets = [].slice.call(document.querySelectorAll(this._selector));      targets.map(function (element) {        var target;        var targetSelector = Util.getSelectorFromElement(element);        if (targetSelector) {          target = document.querySelector(targetSelector);        }        if (target) {          var targetBCR = target.getBoundingClientRect();          if (targetBCR.width || targetBCR.height) {            // TODO (fat): remove sketch reliance on jQuery position/offset            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];          }        }        return null;      }).filter(function (item) {        return item;      }).sort(function (a, b) {        return a[0] - b[0];      }).forEach(function (item) {        _this2._offsets.push(item[0]);        _this2._targets.push(item[1]);      });    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY$8);      $(this._scrollElement).off(EVENT_KEY$8);      this._element = null;      this._scrollElement = null;      this._config = null;      this._selector = null;      this._offsets = null;      this._targets = null;      this._activeTarget = null;      this._scrollHeight = null;    } // Private    ;    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, Default$6, typeof config === 'object' && config ? config : {});      if (typeof config.target !== 'string') {        var id = $(config.target).attr('id');        if (!id) {          id = Util.getUID(NAME$8);          $(config.target).attr('id', id);        }        config.target = "#" + id;      }      Util.typeCheckConfig(NAME$8, config, DefaultType$6);      return config;    };    _proto._getScrollTop = function _getScrollTop() {      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;    };    _proto._getScrollHeight = function _getScrollHeight() {      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);    };    _proto._getOffsetHeight = function _getOffsetHeight() {      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;    };    _proto._process = function _process() {      var scrollTop = this._getScrollTop() + this._config.offset;      var scrollHeight = this._getScrollHeight();      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();      if (this._scrollHeight !== scrollHeight) {        this.refresh();      }      if (scrollTop >= maxScroll) {        var target = this._targets[this._targets.length - 1];        if (this._activeTarget !== target) {          this._activate(target);        }        return;      }      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {        this._activeTarget = null;        this._clear();        return;      }      var offsetLength = this._offsets.length;      for (var i = offsetLength; i--;) {        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);        if (isActiveTarget) {          this._activate(this._targets[i]);        }      }    };    _proto._activate = function _activate(target) {      this._activeTarget = target;      this._clear();      var queries = this._selector.split(',').map(function (selector) {        return selector + "[data-target=\"" + target + "\"]," + selector + "[href=\"" + target + "\"]";      });      var $link = $([].slice.call(document.querySelectorAll(queries.join(','))));      if ($link.hasClass(ClassName$8.DROPDOWN_ITEM)) {        $link.closest(Selector$8.DROPDOWN).find(Selector$8.DROPDOWN_TOGGLE).addClass(ClassName$8.ACTIVE);        $link.addClass(ClassName$8.ACTIVE);      } else {        // Set triggered link as active        $link.addClass(ClassName$8.ACTIVE); // Set triggered links parents as active        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor        $link.parents(Selector$8.NAV_LIST_GROUP).prev(Selector$8.NAV_LINKS + ", " + Selector$8.LIST_ITEMS).addClass(ClassName$8.ACTIVE); // Handle special case when .nav-link is inside .nav-item        $link.parents(Selector$8.NAV_LIST_GROUP).prev(Selector$8.NAV_ITEMS).children(Selector$8.NAV_LINKS).addClass(ClassName$8.ACTIVE);      }      $(this._scrollElement).trigger(Event$8.ACTIVATE, {        relatedTarget: target      });    };    _proto._clear = function _clear() {      [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {        return node.classList.contains(ClassName$8.ACTIVE);      }).forEach(function (node) {        return node.classList.remove(ClassName$8.ACTIVE);      });    } // Static    ;    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var data = $(this).data(DATA_KEY$8);        var _config = typeof config === 'object' && config;        if (!data) {          data = new ScrollSpy(this, _config);          $(this).data(DATA_KEY$8, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    _createClass(ScrollSpy, null, [{      key: "VERSION",      get: function get() {        return VERSION$8;      }    }, {      key: "Default",      get: function get() {        return Default$6;      }    }]);    return ScrollSpy;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(window).on(Event$8.LOAD_DATA_API, function () {    var scrollSpys = [].slice.call(document.querySelectorAll(Selector$8.DATA_SPY));    var scrollSpysLength = scrollSpys.length;    for (var i = scrollSpysLength; i--;) {      var $spy = $(scrollSpys[i]);      ScrollSpy._jQueryInterface.call($spy, $spy.data());    }  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$8] = ScrollSpy._jQueryInterface;  $.fn[NAME$8].Constructor = ScrollSpy;  $.fn[NAME$8].noConflict = function () {    $.fn[NAME$8] = JQUERY_NO_CONFLICT$8;    return ScrollSpy._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$9 = 'tab';  var VERSION$9 = '4.3.1';  var DATA_KEY$9 = 'bs.tab';  var EVENT_KEY$9 = "." + DATA_KEY$9;  var DATA_API_KEY$7 = '.data-api';  var JQUERY_NO_CONFLICT$9 = $.fn[NAME$9];  var Event$9 = {    HIDE: "hide" + EVENT_KEY$9,    HIDDEN: "hidden" + EVENT_KEY$9,    SHOW: "show" + EVENT_KEY$9,    SHOWN: "shown" + EVENT_KEY$9,    CLICK_DATA_API: "click" + EVENT_KEY$9 + DATA_API_KEY$7  };  var ClassName$9 = {    DROPDOWN_MENU: 'dropdown-menu',    ACTIVE: 'active',    DISABLED: 'disabled',    FADE: 'fade',    SHOW: 'show'  };  var Selector$9 = {    DROPDOWN: '.dropdown',    NAV_LIST_GROUP: '.nav, .list-group',    ACTIVE: '.active',    ACTIVE_UL: '> li > .active',    DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',    DROPDOWN_TOGGLE: '.dropdown-toggle',    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Tab =  /*#__PURE__*/  function () {    function Tab(element) {      this._element = element;    } // Getters    var _proto = Tab.prototype;    // Public    _proto.show = function show() {      var _this = this;      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName$9.ACTIVE) || $(this._element).hasClass(ClassName$9.DISABLED)) {        return;      }      var target;      var previous;      var listElement = $(this._element).closest(Selector$9.NAV_LIST_GROUP)[0];      var selector = Util.getSelectorFromElement(this._element);      if (listElement) {        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? Selector$9.ACTIVE_UL : Selector$9.ACTIVE;        previous = $.makeArray($(listElement).find(itemSelector));        previous = previous[previous.length - 1];      }      var hideEvent = $.Event(Event$9.HIDE, {        relatedTarget: this._element      });      var showEvent = $.Event(Event$9.SHOW, {        relatedTarget: previous      });      if (previous) {        $(previous).trigger(hideEvent);      }      $(this._element).trigger(showEvent);      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {        return;      }      if (selector) {        target = document.querySelector(selector);      }      this._activate(this._element, listElement);      var complete = function complete() {        var hiddenEvent = $.Event(Event$9.HIDDEN, {          relatedTarget: _this._element        });        var shownEvent = $.Event(Event$9.SHOWN, {          relatedTarget: previous        });        $(previous).trigger(hiddenEvent);        $(_this._element).trigger(shownEvent);      };      if (target) {        this._activate(target, target.parentNode, complete);      } else {        complete();      }    };    _proto.dispose = function dispose() {      $.removeData(this._element, DATA_KEY$9);      this._element = null;    } // Private    ;    _proto._activate = function _activate(element, container, callback) {      var _this2 = this;      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $(container).find(Selector$9.ACTIVE_UL) : $(container).children(Selector$9.ACTIVE);      var active = activeElements[0];      var isTransitioning = callback && active && $(active).hasClass(ClassName$9.FADE);      var complete = function complete() {        return _this2._transitionComplete(element, active, callback);      };      if (active && isTransitioning) {        var transitionDuration = Util.getTransitionDurationFromElement(active);        $(active).removeClass(ClassName$9.SHOW).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      } else {        complete();      }    };    _proto._transitionComplete = function _transitionComplete(element, active, callback) {      if (active) {        $(active).removeClass(ClassName$9.ACTIVE);        var dropdownChild = $(active.parentNode).find(Selector$9.DROPDOWN_ACTIVE_CHILD)[0];        if (dropdownChild) {          $(dropdownChild).removeClass(ClassName$9.ACTIVE);        }        if (active.getAttribute('role') === 'tab') {          active.setAttribute('aria-selected', false);        }      }      $(element).addClass(ClassName$9.ACTIVE);      if (element.getAttribute('role') === 'tab') {        element.setAttribute('aria-selected', true);      }      Util.reflow(element);      if (element.classList.contains(ClassName$9.FADE)) {        element.classList.add(ClassName$9.SHOW);      }      if (element.parentNode && $(element.parentNode).hasClass(ClassName$9.DROPDOWN_MENU)) {        var dropdownElement = $(element).closest(Selector$9.DROPDOWN)[0];        if (dropdownElement) {          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector$9.DROPDOWN_TOGGLE));          $(dropdownToggleList).addClass(ClassName$9.ACTIVE);        }        element.setAttribute('aria-expanded', true);      }      if (callback) {        callback();      }    } // Static    ;    Tab._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var $this = $(this);        var data = $this.data(DATA_KEY$9);        if (!data) {          data = new Tab(this);          $this.data(DATA_KEY$9, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config]();        }      });    };    _createClass(Tab, null, [{      key: "VERSION",      get: function get() {        return VERSION$9;      }    }]);    return Tab;  }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$9.CLICK_DATA_API, Selector$9.DATA_TOGGLE, function (event) {    event.preventDefault();    Tab._jQueryInterface.call($(this), 'show');  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$9] = Tab._jQueryInterface;  $.fn[NAME$9].Constructor = Tab;  $.fn[NAME$9].noConflict = function () {    $.fn[NAME$9] = JQUERY_NO_CONFLICT$9;    return Tab._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$a = 'toast';  var VERSION$a = '4.3.1';  var DATA_KEY$a = 'bs.toast';  var EVENT_KEY$a = "." + DATA_KEY$a;  var JQUERY_NO_CONFLICT$a = $.fn[NAME$a];  var Event$a = {    CLICK_DISMISS: "click.dismiss" + EVENT_KEY$a,    HIDE: "hide" + EVENT_KEY$a,    HIDDEN: "hidden" + EVENT_KEY$a,    SHOW: "show" + EVENT_KEY$a,    SHOWN: "shown" + EVENT_KEY$a  };  var ClassName$a = {    FADE: 'fade',    HIDE: 'hide',    SHOW: 'show',    SHOWING: 'showing'  };  var DefaultType$7 = {    animation: 'boolean',    autohide: 'boolean',    delay: 'number'  };  var Default$7 = {    animation: true,    autohide: true,    delay: 500  };  var Selector$a = {    DATA_DISMISS: '[data-dismiss="toast"]'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Toast =  /*#__PURE__*/  function () {    function Toast(element, config) {      this._element = element;      this._config = this._getConfig(config);      this._timeout = null;      this._setListeners();    } // Getters    var _proto = Toast.prototype;    // Public    _proto.show = function show() {      var _this = this;      $(this._element).trigger(Event$a.SHOW);      if (this._config.animation) {        this._element.classList.add(ClassName$a.FADE);      }      var complete = function complete() {        _this._element.classList.remove(ClassName$a.SHOWING);        _this._element.classList.add(ClassName$a.SHOW);        $(_this._element).trigger(Event$a.SHOWN);        if (_this._config.autohide) {          _this.hide();        }      };      this._element.classList.remove(ClassName$a.HIDE);      this._element.classList.add(ClassName$a.SHOWING);      if (this._config.animation) {        var transitionDuration = Util.getTransitionDurationFromElement(this._element);        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      } else {        complete();      }    };    _proto.hide = function hide(withoutTimeout) {      var _this2 = this;      if (!this._element.classList.contains(ClassName$a.SHOW)) {        return;      }      $(this._element).trigger(Event$a.HIDE);      if (withoutTimeout) {        this._close();      } else {        this._timeout = setTimeout(function () {          _this2._close();        }, this._config.delay);      }    };    _proto.dispose = function dispose() {      clearTimeout(this._timeout);      this._timeout = null;      if (this._element.classList.contains(ClassName$a.SHOW)) {        this._element.classList.remove(ClassName$a.SHOW);      }      $(this._element).off(Event$a.CLICK_DISMISS);      $.removeData(this._element, DATA_KEY$a);      this._element = null;      this._config = null;    } // Private    ;    _proto._getConfig = function _getConfig(config) {      config = _objectSpread({}, Default$7, $(this._element).data(), typeof config === 'object' && config ? config : {});      Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);      return config;    };    _proto._setListeners = function _setListeners() {      var _this3 = this;      $(this._element).on(Event$a.CLICK_DISMISS, Selector$a.DATA_DISMISS, function () {        return _this3.hide(true);      });    };    _proto._close = function _close() {      var _this4 = this;      var complete = function complete() {        _this4._element.classList.add(ClassName$a.HIDE);        $(_this4._element).trigger(Event$a.HIDDEN);      };      this._element.classList.remove(ClassName$a.SHOW);      if (this._config.animation) {        var transitionDuration = Util.getTransitionDurationFromElement(this._element);        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      } else {        complete();      }    } // Static    ;    Toast._jQueryInterface = function _jQueryInterface(config) {      return this.each(function () {        var $element = $(this);        var data = $element.data(DATA_KEY$a);        var _config = typeof config === 'object' && config;        if (!data) {          data = new Toast(this, _config);          $element.data(DATA_KEY$a, data);        }        if (typeof config === 'string') {          if (typeof data[config] === 'undefined') {            throw new TypeError("No method named \"" + config + "\"");          }          data[config](this);        }      });    };    _createClass(Toast, null, [{      key: "VERSION",      get: function get() {        return VERSION$a;      }    }, {      key: "DefaultType",      get: function get() {        return DefaultType$7;      }    }, {      key: "Default",      get: function get() {        return Default$7;      }    }]);    return Toast;  }();  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$a] = Toast._jQueryInterface;  $.fn[NAME$a].Constructor = Toast;  $.fn[NAME$a].noConflict = function () {    $.fn[NAME$a] = JQUERY_NO_CONFLICT$a;    return Toast._jQueryInterface;  };  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): index.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  (function () {    if (typeof $ === 'undefined') {      throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');    }    var version = $.fn.jquery.split(' ')[0].split('.');    var minMajor = 1;    var ltMajor = 2;    var minMinor = 9;    var minPatch = 1;    var maxMajor = 4;    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {      throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');    }  })();  exports.Util = Util;  exports.Alert = Alert;  exports.Button = Button;  exports.Carousel = Carousel;  exports.Collapse = Collapse;  exports.Dropdown = Dropdown;  exports.Modal = Modal;  exports.Popover = Popover;  exports.Scrollspy = ScrollSpy;  exports.Tab = Tab;  exports.Toast = Toast;  exports.Tooltip = Tooltip;  Object.defineProperty(exports, '__esModule', { value: true });}));//# sourceMappingURL=bootstrap.js.map
                
        script(type="text/javascript").
                    $('.sub-menu ul').hide();$(".sub-menu a").click(function () {	$(this).parent(".sub-menu").children("ul").slideToggle("100");	$(this).find(".right").toggleClass("fa-caret-up fa-caret-down");});
                
    body(class="antialiased bg-body text-body font-body")
        div(class="")
            div(class="top-0 flex items-center justify-between px-4 py-5 w-full relative bg")
                div(class="w-auto")
                    div(class="flex flex-wrap items-center")
                        div(class="w-auto mr-14")
                            a(href="index.html")
                                img(src="images/LogoEnBlancoAlpha-png-1693329791468.webp", alt="", class="transform hover:scale-110 transition ease-in-out duration-500")
                        div(class="w-auto hidden lg:block")
                            nav(class="navbar")
                                div(class="w-auto hidden lg:block h-auto")
                                    ul(class="flex items-center mr-16 font-bold hover:text-indigo-600")
                                        li(class="mr-9 font-medium hover:text-indigo-600")
                                            a(href="index.html", class="publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") HOME
                                        li
                                            a(href="about-us.html", class="mr-9 publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") ABOUT US
                                            ul
                                                li(class="z-auto h-auto")
                                                    a(href="meet-our-team.html", class="hover:text-indigo-600 publicsans") Meet Our Team
                                                    |                       
                                        li
                                            a(href="#", class="mr-9 publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") OBSERVATORY
                                        li
                                            a(href="products.html", class="mr-9 publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") PRODUCT
                                            ul
                                                li
                                                    a(href="educational-institutions.html", class="hover:text-indigo-600 publicsans") For Educational Institutions
                                                li
                                                    a(href="parents-teachers.html", class="hover:text-indigo-600 publicsans") For Parents/Teachers
                                                    |                         
                                                li(class="z-auto h-auto")
                                                    a(href="young-astronomers.html", class="hover:text-indigo-600 publicsans") For Young Astronomers
                                                    |                         
                                        li
                                            a(href="blog.html", class="mr-9 publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") BLOG
                                        li
                                            a(href="contact-us.html", class="mr-9 publicsans font-bold hover:text-indigo-600 transition ease-in-out duration-500") CONTACT
                div(class="w-auto")
                    div(class="flex flex-wrap items-center")
                        div(class="w-auto hidden mr-5 lg:block")
                            div(class="inline-block")       
                            |               
                        div(class="w-auto hidden lg:block")
                            div(class="inline-block")
                                button(class="w-full font-semibold rounded-xl focus:ring transition ease-in-out duration-200 publicsanspurple font-bold px-10 py-3", type="button")
                                    img(src="images/Account-Thumbnail-png-1693514926644.webp", alt="", class="rounded shadow-md inline", width="20")
                                    |  ACCOUNT 
                        div(class="w-auto lg:hidden")
                            a(href="#")
                                svg(class="navbar-burger text-indigo-600", width="51", height="51", viewbox="0 0 56 56", fill="none", xmlns="http://www.w3.org/2000/svg")
                                    rect(width="56", height="56", rx="28", fill="currentColor")
                                    path(d="M37 32H19M37 24H19", stroke="white", stroke-width="1.5", stroke-linecap="round", stroke-linejoin="round")
                div(class="navbar-menu fixed top-0 left-0 bottom-0 w-4/6 sm:max-w-xs z-50 hidden")
                    div(class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-80")
                    nav(class="relative z-10 px-9 pt-8 bg h-full overflow-y-auto")
                        div(class="flex flex-wrap justify-between h-full")
                            div(class="w-full")
                                div(class="flex items-center justify-between -m-2")
                                    div(class="w-auto p-2")
                                        a(class="inline-block", href="#")
                                            img(src="images/LogoEnBlancoAlpha-png-1693329791468.webp", alt="")
                                    div(class="w-auto p-2")
                                        a(class="navbar-burger", href="#")
                                            svg(width="24", height="24", viewbox="0 0 24 24", fill="none", xmlns="http://www.w3.org/2000/svg")
                                                path(d="M6 18L18 6M6 6L18 18", stroke="#111827", stroke-width="2", stroke-linecap="round", stroke-linejoin="round")
                            div(class="flex flex-col justify-center py-16 w-full")
                                ul
                                    li(class="mb-12")
                                        a(class="font-medium hover:text-indigo-600 publicsans", href="#") HOME
                                    div(class="dropdown relative")
                                        button
                                            li(class="mb-12")
                                                a(class="font-medium hover:text-indigo-600 publicsans", href="products.html") ABOUT US
                                        ul(class="dropdown-menu absolute hidden text-gray-700 pt-1")
                                            li(class="")
                                                a(class="rounded-t bg-gray-200 hover:bg-gray-400 py-2 px-4 block whitespace-no-wrap", href="meet-our-team.html") MEET OUR TEAM
                                    li(class="mb-12")
                                        a(class="font-medium hover:text-indigo-600 publicsans", href="#") OBSERVATORY
                                    div(class="dropdown relative")
                                        button
                                            li(class="mb-12")
                                                a(class="font-medium hover:text-indigo-600 publicsans", href="products.html") PRODUCTS
                                        ul(class="dropdown-menu absolute hidden text-gray-700 pt-1")
                                            li(class="")
                                                a(class="rounded-b bg-gray-200 hover:bg-gray-400 py-2 px-4 block whitespace-no-wrap", href="educational-institutions.html") For Educational Institutions
                                            li(class="")
                                                a(class="bg-gray-200 hover:bg-gray-400 py-2 px-4 block whitespace-no-wrap", href="parents-teachers.html") For Parents/Teachers
                                            li(class="")
                                                a(class="rounded-t bg-gray-200 hover:bg-gray-400 py-2 px-4 block whitespace-no-wrap", href="young-astronomers.html") For Young Astronomers
                                    li(class="mb-12")
                                        a(class="font-medium hover:text-indigo-600 publicsans", href="#") BLOG
                                    li
                                        a(class="font-medium hover:text-indigo-600 publicsans", href="#") CONTACT
                            div(class="flex flex-col justify-end w-full pb-8")
                                div(class="flex flex-wrap")
                                    div(class="w-full mb-3")
                                        div(class="block")                   
                                    div(class="w-full")
                                        div(class="block")
                                            button(class="w-full font-semibold rounded-xl focus:ring transition ease-in-out duration-200 publicsanspurple font-bold px-10 py-3", type="button")
                                                img(src="images/Account-Thumbnail-png-1693514926644.webp", alt="", class="rounded shadow-md inline", width="20")
                                                |  ACCOUNT 
            section(class="py-28 bg-black bg-no-repeat bg-center bg-cover bg-fixed overflow-hidden", style="background: url("images/rancho-mirage4.jpg") 50% 50% / cover no-repeat fixed padding-box border-box rgb(0, 0, 0);")
                div(class="container px-4 mx-auto")
                    div(class="px-12 pt-12 pb-9 md:max-w-xl bg-black rounded-4xl opacity-80", style="backdrop-filter: blur(10px);")
                        h3(class="mb-4 text-6xl md:text-7xl text-white font-bold font-heading tracking-px-n leading-tight manrope", contenteditable="false") Welcome to our Atacama Desert Observatory
                        p(class="mb-11 text-lg text-gray-400 font-medium leading-normal manrope") Nestled in the heart of the otherworldly Atacama Desert, our observatory is an oasis for stargazers, astronomers, and anyone fascinated by the mysteries of the cosmos. Situated in one of the most remarkable astronomical locations on the planet, our observatory offers a unique window into the universe, unmatched by any other.
                        p(class="mb-11 text-lg text-gray-400 font-medium leading-normal manrope") The Atacama Desert is not just any desert; it is the driest desert on Earth, making it a celestial haven. Its high-altitude plains, clear skies, and minimal light pollution create the ideal conditions for celestial observation in more than 300 days of the year. The arid landscape and lofty elevations provide a stable atmosphere, allowing astronomers to capture unparalleled images of the night sky and delve into the deepest reaches of space.
                        a(class="inline-flex flex-wrap items-center text-white hover:text-gray-200", href="#")       
                        |       
                        |           
            section(class="py-28 bg-white overflow-hidden bg")
                div(class="container px-4 mx-auto")
                    h2(class="mb-20 text-6xl md:text-8xl xl:text-10xl text-center font-bold font-heading tracking-px-n leading-none publicsanswhite") Our Telescopes
                    div(class="max-w-5xl mx-auto")
                        div(class="flex flex-wrap -m-3")
                            div(class="w-full md:w-1/3 p-10")
                                div(class="max-w-max mx-auto")
                                    div(class="mb-6 max-w-max overflow-hidden rounded-3xl")
                                        a(href="andesita.html")
                                            img(class="transform hover:scale-105 transition ease-in-out duration-1000", src="images/Andesita.png", alt="")
                                    h3(class="mb-1 text-lg font-bold font-heading leading-snug publicsanswhite text-center") Andesita
                                    p(class="font-medium publicsanswhite text-center") Rowe-Ackermann 11'
                            div(class="w-full md:w-1/3 p-3")
                                div(class="max-w-max mx-auto")
                                    div(class="mb-6 max-w-max overflow-hidden rounded-3xl")
                                        a(href="atacamito.html")
                                            img(class="transform hover:scale-105 transition ease-in-out duration-1000", src="images/Atacamito.png", alt="")
                                    h3(class="mb-1 text-lg font-bold font-heading leading-snug publicsanswhite text-center") Atacamito
                                    p(class="font-medium publicsanswhite text-center") Schmidt Cassegrain 14'
                            div(class="w-full md:w-1/3 p-10")
                                div(class="max-w-max mx-auto")
                                    div(class="mb-6 max-w-max overflow-hidden rounded-3xl")
                                        a(href="ckepininai.html")
                                            img(class="transform hover:scale-105 transition ease-in-out duration-1000", src="images/Ckepininai.png", alt="")
                                    h3(class="mb-1 text-lg font-bold font-heading leading-snug publicsanswhite text-center") Ckepininai
                                    p(class="font-medium publicsanswhite text-center") Schmidt Cassegrain 9.25'
            section(class="py-32 overflow-hidden bg")
                div(class="container px-4 mx-auto")
                    div(class="flex flex-wrap items-center -m-8")
                        div(class="w-full md:w-1/2 p-8")
                            h2(class="mb-9 text-6xl md:text-8xl xl:text-10xl font-bold font-heading tracking-px-n leading-none publicsanswhite") Captured by our Telescopes
                            p(class="mb-10 text-lg font-medium leading-relaxed md:max-w-md publicsanswhite") Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat.
                            div(class="mb-11 md:inline-block rounded-xl shadow-4xl")
                                button(class="py-4 px-6 w-full text-white font-semibold border border-indigo-700 rounded-xl focus:ring focus:ring-indigo-300 bg-indigo-600 hover:bg-indigo-700 transition ease-in-out duration-200", type="button") Learn More
                            div(class="flex flex-wrap -m-2")
                                div(class="w-auto p-2")       
                                |               
                                div(class="flex-1 p-2")       
                                |               
                        div(class="w-full md:w-1/2 p-8")
                            div(class="slider-container")
                                div(class="slider")
                                    div(class="slides")
                                        div(id="slides__1", class="slide")
                                            img(src="images/08-lunar-landscape-valle-de-la-muerte-ATACAMA1217-3ca93b53291548e79457fdbb93e2785a-1.png", alt="", class="rounded shadow-md", style="")
                                            a(class="slide__prev", href="#slides__4", title="Next")
                                            |                     
                                            a(class="slide__next", href="#slides__2", title="Next")
                                        div(id="slides__2", class="slide")
                                            img(src="images/25566.jpg", alt="", class="rounded shadow-md", style="")
                                            a(class="slide__prev", href="#slides__1", title="Prev")
                                            |                     
                                            a(class="slide__next", href="#slides__3", title="Next")
                                        div(id="slides__3", class="slide")
                                            img(src="images/08-lunar-landscape-valle-de-la-muerte-ATACAMA1217-3ca93b53291548e79457fdbb93e2785a-1.png", alt="", class="rounded shadow-md", style="")
                                            a(class="slide__prev", href="#slides__2", title="Prev")
                                            |                     
                                            a(class="slide__next", href="#slides__4", title="Next")
                                        div(id="slides__4", class="slide")
                                            img(src="images/25566.jpg", alt="", class="rounded shadow-md", style="")
                                            a(class="slide__prev", href="#slides__3", title="Prev")
                                            |                     
                                            a(class="slide__next", href="#slides__1", title="Prev")
                                    div(class="slider__nav")
                                        a(class="slider__navlink", href="#slides__1")
                                        |                   
                                        a(class="slider__navlink", href="#slides__2")
                                        |                   
                                        a(class="slider__navlink", href="#slides__3")
                                        |                   
                                        a(class="slider__navlink", href="#slides__4")
            section(class="relative pt-24 overflow-hidden bg")
                div(class="relative z-10 container px-4 mx-auto")
                    img(class="absolute left-1/2 bottom-0 h-full transform -translate-x-1/2", src="flaro-assets/images/footers/gradient.svg", alt="")
                    div(class="pb-24 border-b border-gray-900")
                        div(class="flex flex-wrap -m-8")
                            div(class="w-full sm:w-1/2 lg:w-1/3 p-8")
                                div(class="lg:max-w-sm")
                                    a(class="mb-8 inline-block", href="#")
                                        img(src="images/LogoEnBlancoAlpha-png-1693329791468.webp", alt="")
                                    p(class="mb-20 text-gray-400 font-medium leading-relaxed md:max-w-xs") Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lectus interdum facilisis odio scelerisque vel neque.
                                    div(class="flex flex-wrap -m-1.5")
                                        div(class="w-auto p-1.5")
                                            a(href="#")
                                                div(class="flex items-center justify-center w-9 h-9 border border-gray-800 hover:border-gray-900 rounded-full")
                                                    svg(width="9", height="16", viewbox="0 0 9 16", fill="none", xmlns="http://www.w3.org/2000/svg")
                                                        path(d="M5.81589 5.30371L5.81589 3.80371C5.81589 3.15371 5.97379 2.80371 7.07905 2.80371H8.44747V0.303711L6.34221 0.303711C3.71063 0.303711 2.658 1.95371 2.658 3.80371V5.30371H0.552734L0.552734 7.80371H2.658L2.658 15.3037H5.81589L5.81589 7.80371H8.13168L8.44747 5.30371H5.81589Z", fill="#D4D4D8")
                                        div(class="w-auto p-1.5")
                                            a(href="#")
                                                div(class="flex items-center justify-center w-9 h-9 border border-gray-800 hover:border-gray-900 rounded-full")
                                                    svg(width="15", height="13", viewbox="0 0 15 13", fill="none", xmlns="http://www.w3.org/2000/svg")
                                                        path(d="M14.8462 2.25418C14.306 2.48722 13.7182 2.65493 13.1126 2.72025C13.7413 2.34675 14.2121 1.75669 14.4367 1.06076C13.8467 1.41171 13.2004 1.6578 12.5265 1.78811C12.2448 1.48698 11.9041 1.24708 11.5257 1.08337C11.1472 0.919662 10.7391 0.835644 10.3268 0.836555C8.65848 0.836555 7.31676 2.18886 7.31676 3.84835C7.31676 4.08139 7.34501 4.31442 7.39091 4.53863C4.89285 4.40799 2.6649 3.21457 1.18372 1.38736C0.913833 1.84834 0.772403 2.37322 0.774144 2.90739C0.774144 3.95251 1.30553 4.87406 2.11586 5.41604C1.63832 5.39724 1.17197 5.26598 0.754725 5.03295V5.07002C0.754725 6.53355 1.78926 7.74639 3.16804 8.02533C2.90916 8.09257 2.64285 8.12697 2.37537 8.12772C2.17941 8.12772 1.99404 8.1083 1.80691 8.08182C2.18824 9.27524 3.29868 10.1421 4.62098 10.1703C3.58645 10.9806 2.29063 11.4573 0.8836 11.4573C0.631146 11.4573 0.398112 11.4485 0.15625 11.4202C1.4909 12.2764 3.07448 12.7708 4.77987 12.7708C10.3162 12.7708 13.3456 8.18421 13.3456 4.2032C13.3456 4.07256 13.3456 3.94192 13.3368 3.81128C13.9229 3.38228 14.4367 2.85089 14.8462 2.25418Z", fill="#D4D4D8")
                                        div(class="w-auto p-1.5")
                                            a(href="#")
                                                div(class="flex items-center justify-center w-9 h-9 border border-gray-800 hover:border-gray-900 rounded-full")
                                                    svg(width="17", height="17", viewbox="0 0 17 17", fill="none", xmlns="http://www.w3.org/2000/svg")
                                                        path(d="M8.5 0.803711C6.329 0.803711 6.056 0.813711 5.203 0.851711C4.35 0.891711 3.769 1.02571 3.26 1.22371C2.72609 1.42453 2.24249 1.73954 1.843 2.14671C1.43608 2.54641 1.12111 3.02995 0.92 3.56371C0.722 4.07171 0.587 4.65371 0.548 5.50371C0.51 6.35871 0.5 6.63071 0.5 8.80471C0.5 10.9767 0.51 11.2487 0.548 12.1017C0.588 12.9537 0.722 13.5347 0.92 14.0437C1.125 14.5697 1.398 15.0157 1.843 15.4607C2.287 15.9057 2.733 16.1797 3.259 16.3837C3.769 16.5817 4.349 16.7167 5.201 16.7557C6.055 16.7937 6.327 16.8037 8.5 16.8037C10.673 16.8037 10.944 16.7937 11.798 16.7557C12.649 16.7157 13.232 16.5817 13.741 16.3837C14.2746 16.1828 14.7578 15.8678 15.157 15.4607C15.602 15.0157 15.875 14.5697 16.08 14.0437C16.277 13.5347 16.412 12.9537 16.452 12.1017C16.49 11.2487 16.5 10.9767 16.5 8.80371C16.5 6.63071 16.49 6.35871 16.452 5.50471C16.412 4.65371 16.277 4.07171 16.08 3.56371C15.8789 3.02994 15.5639 2.54639 15.157 2.14671C14.7576 1.73939 14.274 1.42436 13.74 1.22371C13.23 1.02571 12.648 0.890711 11.797 0.851711C10.943 0.813711 10.672 0.803711 8.498 0.803711H8.501H8.5ZM7.783 2.24571H8.501C10.637 2.24571 10.89 2.25271 11.733 2.29171C12.513 2.32671 12.937 2.45771 13.219 2.56671C13.592 2.71171 13.859 2.88571 14.139 3.16571C14.419 3.44571 14.592 3.71171 14.737 4.08571C14.847 4.36671 14.977 4.79071 15.012 5.57071C15.051 6.41371 15.059 6.66671 15.059 8.80171C15.059 10.9367 15.051 11.1907 15.012 12.0337C14.977 12.8137 14.846 13.2367 14.737 13.5187C14.6087 13.8661 14.404 14.1801 14.138 14.4377C13.858 14.7177 13.592 14.8907 13.218 15.0357C12.938 15.1457 12.514 15.2757 11.733 15.3117C10.89 15.3497 10.637 15.3587 8.501 15.3587C6.365 15.3587 6.111 15.3497 5.268 15.3117C4.488 15.2757 4.065 15.1457 3.783 15.0357C3.4355 14.9076 3.12113 14.7033 2.863 14.4377C2.59675 14.1797 2.39172 13.8654 2.263 13.5177C2.154 13.2367 2.023 12.8127 1.988 12.0327C1.95 11.1897 1.942 10.9367 1.942 8.79971C1.942 6.66371 1.95 6.41171 1.988 5.56871C2.024 4.78871 2.154 4.36471 2.264 4.08271C2.409 3.70971 2.583 3.44271 2.863 3.16271C3.143 2.88271 3.409 2.70971 3.783 2.56471C4.065 2.45471 4.488 2.32471 5.268 2.28871C6.006 2.25471 6.292 2.24471 7.783 2.24371V2.24571ZM12.771 3.57371C12.6449 3.57371 12.5201 3.59854 12.4036 3.64679C12.2872 3.69503 12.1813 3.76574 12.0922 3.85489C12.003 3.94403 11.9323 4.04986 11.8841 4.16633C11.8358 4.28281 11.811 4.40764 11.811 4.53371C11.811 4.65978 11.8358 4.78461 11.8841 4.90109C11.9323 5.01756 12.003 5.12339 12.0922 5.21253C12.1813 5.30168 12.2872 5.37239 12.4036 5.42064C12.5201 5.46888 12.6449 5.49371 12.771 5.49371C13.0256 5.49371 13.2698 5.39257 13.4498 5.21253C13.6299 5.0325 13.731 4.78832 13.731 4.53371C13.731 4.2791 13.6299 4.03492 13.4498 3.85489C13.2698 3.67485 13.0256 3.57371 12.771 3.57371ZM8.501 4.69571C7.95607 4.68721 7.41489 4.7872 6.90898 4.98985C6.40306 5.19251 5.94251 5.49378 5.55415 5.87613C5.16579 6.25849 4.85736 6.71428 4.64684 7.21697C4.43632 7.71966 4.3279 8.25921 4.3279 8.80421C4.3279 9.34921 4.43632 9.88876 4.64684 10.3915C4.85736 10.8941 5.16579 11.3499 5.55415 11.7323C5.94251 12.1146 6.40306 12.4159 6.90898 12.6186C7.41489 12.8212 7.95607 12.9212 8.501 12.9127C9.57954 12.8959 10.6082 12.4556 11.365 11.687C12.1217 10.9183 12.5459 9.88288 12.5459 8.80421C12.5459 7.72554 12.1217 6.69012 11.365 5.92146C10.6082 5.1528 9.57954 4.71254 8.501 4.69571ZM8.501 6.13671C9.20833 6.13671 9.88669 6.4177 10.3869 6.91786C10.887 7.41802 11.168 8.09638 11.168 8.80371C11.168 9.51104 10.887 10.1894 10.3869 10.6896C9.88669 11.1897 9.20833 11.4707 8.501 11.4707C7.79367 11.4707 7.11531 11.1897 6.61515 10.6896C6.11499 10.1894 5.834 9.51104 5.834 8.80371C5.834 8.09638 6.11499 7.41802 6.61515 6.91786C7.11531 6.4177 7.79367 6.13671 8.501 6.13671Z", fill="#D4D4D8")
                            div(class="w-full sm:w-1/2 lg:w-2/6 p-8")
                                h3(class="mb-8 text-sm text-gray-600 uppercase font-semibold leading-normal tracking-px") Company
                                ul
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed", href="#") About Us
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed", href="#") Observatory
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed", href="#") Products
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed", href="#") Blog
                                    li
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed", href="#") Contact
                            div(class="w-full lg:w-2/6 p-8")
                                h3(class="mb-8 text-sm text-gray-600 uppercase font-semibold leading-normal tracking-px") Important links
                                ul
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed p-3", href="#")
                                            svg(width="21", height="21", viewbox="0 0 21 21", fill="none", xmlns="http://www.w3.org/2000/svg", class="float-left")
                                                path(d="M15.4491 14.4807C14.7215 15.2082 13.2539 16.6758 12.1485 17.7813C11.3674 18.5623 10.1026 18.5623 9.32157 17.7813C8.23595 16.6957 6.79548 15.2552 6.02098 14.4807C3.41749 11.8772 3.41749 7.65609 6.02098 5.0526C8.62448 2.4491 12.8456 2.4491 15.4491 5.0526C18.0526 7.65609 18.0526 11.8772 15.4491 14.4807Z", stroke="#4F46E5", stroke-width="2", stroke-linecap="round", stroke-linejoin="round")
                                                path(d="M13.235 9.76664C13.235 11.1474 12.1157 12.2666 10.735 12.2666C9.35431 12.2666 8.23503 11.1474 8.23503 9.76664C8.23503 8.38593 9.35431 7.26664 10.735 7.26664C12.1157 7.26664 13.235 8.38593 13.235 9.76664Z", stroke="#4F46E5", stroke-width="2", stroke-linecap="round", stroke-linejoin="round")
                                            | 2443 Oak Ridge Omaga, QA 45065
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed p-3", href="#")
                                            svg(width="20", height="21", viewbox="0 0 20 21", fill="none", xmlns="http://www.w3.org/2000/svg", class="float-left")
                                                path(d="M2.5 4.76664C2.5 3.84617 3.24619 3.09998 4.16667 3.09998H6.89937C7.25806 3.09998 7.57651 3.3295 7.68994 3.66979L8.93811 7.41432C9.06926 7.80775 8.89115 8.23773 8.52022 8.4232L6.63917 9.36372C7.55771 11.401 9.19898 13.0423 11.2363 13.9608L12.1768 12.0798C12.3622 11.7088 12.7922 11.5307 13.1857 11.6619L16.9302 12.91C17.2705 13.0235 17.5 13.3419 17.5 13.7006V16.4333C17.5 17.3538 16.7538 18.1 15.8333 18.1H15C8.09644 18.1 2.5 12.5035 2.5 5.59998V4.76664Z", stroke="#4F46E5", stroke-width="2", stroke-linecap="round", stroke-linejoin="round")
                                            | 207-8767-452
                                    li(class="mb-5")
                                        a(class="text-white hover:text-gray-200 font-medium leading-relaxed p-3", href="#")
                                            svg(width="21", height="21", viewbox="0 0 21 21", fill="none", xmlns="http://www.w3.org/2000/svg", class="float-left")
                                                path(d="M3.11719 7.2666L9.69269 11.6503C10.2525 12.0235 10.9819 12.0235 11.5417 11.6503L18.1172 7.2666M4.78385 16.4333H16.4505C17.371 16.4333 18.1172 15.6871 18.1172 14.7666V6.43327C18.1172 5.51279 17.371 4.7666 16.4505 4.7666H4.78385C3.86338 4.7666 3.11719 5.51279 3.11719 6.43327V14.7666C3.11719 15.6871 3.86338 16.4333 4.78385 16.4333Z", stroke="#4F46E5", stroke-width="2", stroke-linecap="round", stroke-linejoin="round")
                                            | info@atacamascope.cl
                    p(class="py-5 text-sm text-gray-300 font-medium text-center leading-normal") Copyright © 2023 Atacamascope
